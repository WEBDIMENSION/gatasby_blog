{"version":3,"file":"component---src-templates-blog-post-tsx-31a5a1ecce8c3a432e56.js","mappings":"8JAqBA,IAjBkB,SAAC,GAAmE,IAAjEA,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,YAC1B,OACE,gCACE,gBAACC,EAAD,CAAYC,UAAU,aAEdF,EACK,uBAAKE,UAAU,UAAUF,EAAzB,KAEA,GAGX,0BAAKD,IAEP,gBAAC,IAAD,CAAeI,QAAS,oBAK9B,IAAMF,EAAaG,EAAAA,QAAAA,IAAAA,WAAH,iEAAGA,CAAH,4F,8FCAhB,IAfsB,SAAC,GAA4B,QAA1BC,EAA0B,EAA1BA,KACvB,OACE,gBAACC,EAAD,CAAWJ,UAAW,QAAtB,UACGG,EAAKE,mBADR,iBACG,EAAkBC,YADrB,aACG,EAAwBC,KAAI,SAACC,GAC5B,OACE,sBAAIC,IAAKD,GACP,gBAAC,IAAD,CAAiBE,KAAMC,EAAAA,MACvB,gBAAC,EAAAC,KAAD,CAAMC,GAAE,cAAgBC,GAAAA,CAAUN,GAA1B,KAAoCA,SAUxD,IAAMJ,EAAYF,EAAAA,QAAAA,GAAAA,WAAH,mEAAGA,CAAH,2G,qGCyCf,UAzDiB,SAAC,GAAkB,MAAhBa,EAAgB,EAAhBA,KACZC,EAAOD,EAAKE,eACVC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEtB,MAAOmB,EAAKX,YAAYR,MAAQ,OAChCuB,iBAAiB,EACjBC,YAAaL,EAAKX,YAAYgB,aAAeL,EAAKM,QAAU,SAG9D,gBAACC,EAAD,CAAgBvB,UAAU,YAAYwB,WAAS,EAACC,SAAS,6BACrD,WACA,GAAIT,EAAKX,YAAYqB,MACnB,OAAO,uBAAK1B,UAAW,SAAhB,SAFT,GAKF,8BACE,gBAAC,IAAD,CAAWH,MAAOmB,EAAKX,YAAYR,MAAOC,YAAY,MAExD,qBAAGE,UAAU,YACX,4BAAOgB,EAAKX,YAAYsB,OAE1B,gBAAC,IAAD,CAAexB,KAAMa,IACrB,qBACEY,wBAAyB,CACvBC,QAAQ,UAAAb,EAAKX,mBAAL,eAAkBgB,eAAeL,MAAAA,OAAjC,EAAiCA,EAAMM,UAAW,IAE5DQ,SAAS,gBAEX,2BAASF,wBAAyB,CAAEC,OAAQb,EAAKe,MAAQD,SAAS,gBAClE,4BAEF,gBAAC,IAAD,CAAe3B,KAAMa,IACrB,gBAACgB,EAAD,CAAYhC,UAAU,eACpB,0BACE,sBAAIA,UAAW,QACZkB,GACC,gBAAC,EAAAN,KAAD,CAAMC,GAAI,QAAUK,EAASe,OAAOC,KAAMC,IAAI,QAA9C,KACKjB,EAASb,YAAYR,QAI9B,sBAAIG,UAAW,QACZmB,GACC,gBAAC,EAAAP,KAAD,CAAMC,GAAI,QAAUM,EAAKc,OAAOC,KAAMC,IAAI,QACvChB,EAAKd,YAAYR,MADpB,WAad,IAAM0B,EAAiBrB,EAAAA,QAAAA,QAAAA,WAAH,oEAAGA,CAAH,sXA+Bd8B,EAAa9B,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH","sources":["webpack://gatsby-starter-blog/./src/components/pageTitle.tsx","webpack://gatsby-starter-blog/./src/components/tagsInContent.tsx","webpack://gatsby-starter-blog/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\"\nimport styled from \"styled-components\"\nimport GoogleAdsense from \"./google/googleAdsense\"\n\nconst PageTitle = ({ title, prefixTitle }: { title: string; prefixTitle: string }) => {\n  return (\n    <>\n      <DivWrapper className=\"pageTitle\">\n        {(() => {\n          if (prefixTitle) {\n            return <div className=\"prefix\">{prefixTitle}:</div>\n          } else {\n            return \"\"\n          }\n        })()}\n        <h1>{title}</h1>\n      </DivWrapper>\n      <GoogleAdsense slotKey={\"contentsLower\"} />\n    </>\n  )\n}\nexport default PageTitle\nconst DivWrapper = styled.div`\n  margin-bottom: 0;\n  display: flex;\n\n  .prefix {\n    font-size: var(--fontSizeH1);\n    margin-right: 0.5em;\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTag } from \"@fortawesome/free-solid-svg-icons\"\n\nconst TagsInContent = ({ node }: { node: any }) => {\n  return (\n    <UlWrapper className={\"tags\"}>\n      {node.frontmatter?.tags?.map((tag: string) => {\n        return (\n          <li key={tag}>\n            <FontAwesomeIcon icon={faTag} />\n            <Link to={`/blog/tags/${kebabCase(tag)}/`}>{tag}</Link>\n          </li>\n        )\n      })}\n    </UlWrapper>\n  )\n}\n\nexport default TagsInContent\n\nconst UlWrapper = styled.ul`\n  display: flex;\n  justify-content: flex-end;\n\n  li {\n    margin-left: 1em;\n\n    button {\n      color: var(--fontColor) !important;\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport styled from \"styled-components\"\nimport PageTitle from \"../components/pageTitle\"\nimport TagsInContent from \"../components/tagsInContent\"\n\nconst BlogPost = ({ data }: any) => {\n  const post = data.markdownRemark\n  const { previous, next } = data\n\n  return (\n    <Layout>\n      <Seo\n        title={post.frontmatter.title + \" の記事\"}\n        DisplaySubTitle={true}\n        description={post.frontmatter.description || post.excerpt + \" の記事\"}\n      />\n\n      <ArticleWrapper className=\"blog-post\" itemScope itemType=\"http://schema.org/Article\">\n        {(() => {\n          if (post.frontmatter.draft) {\n            return <div className={\"draft\"}>Draft</div>\n          }\n        })()}\n        <header>\n          <PageTitle title={post.frontmatter.title} prefixTitle=\"\" />\n        </header>\n        <p className=\"postDate\">\n          <span>{post.frontmatter.date}</span>\n        </p>\n        <TagsInContent node={post} />\n        <p\n          dangerouslySetInnerHTML={{\n            __html: post.frontmatter?.description || post?.excerpt || \"\",\n          }}\n          itemProp=\"description\"\n        />\n        <section dangerouslySetInnerHTML={{ __html: post.html }} itemProp=\"articleBody\" />\n        <hr />\n      </ArticleWrapper>\n      <TagsInContent node={post} />\n      <NavWrapper className=\"blogPostNav\">\n        <ul>\n          <li className={\"prev\"}>\n            {previous && (\n              <Link to={\"/blog\" + previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li className={\"next\"}>\n            {next && (\n              <Link to={\"/blog\" + next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </NavWrapper>\n    </Layout>\n  )\n}\n\nexport default BlogPost\n\nconst ArticleWrapper = styled.article`\n  header {\n    margin-bottom: 1em;\n    border-bottom: 1px var(--colorPrimary) dashed;\n  }\n\n  .draft {\n    background-color: var(--colorWarning);\n    color: var(--bgColorPrimary);\n    padding: 4px;\n    border-radius: 4px;\n    text-align: center;\n    font-weight: bolder;\n  }\n\n  P.postDate {\n    text-align: end;\n\n    span {\n      color: var(--colorSecondary);\n    }\n  }\n\n  section {\n    margin-top: 1em;\n    border-radius: 8px;\n    background-color: var(--bgColorScondary);\n    padding: 0.5em;\n  }\n`\n\nconst NavWrapper = styled.nav`\n\n  margin: 1em 0;\n\n  ul {\n    display: flex;\n    justify-content: space-between;\n\n    li.next {\n      text-align: right;\n    }\n`\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String, $previousPostId: String, $nextPostId: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        post_modified(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n        draft\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["title","prefixTitle","DivWrapper","className","slotKey","styled","node","UlWrapper","frontmatter","tags","map","tag","key","icon","faTag","Link","to","kebabCase","data","post","markdownRemark","previous","next","DisplaySubTitle","description","excerpt","ArticleWrapper","itemScope","itemType","draft","date","dangerouslySetInnerHTML","__html","itemProp","html","NavWrapper","fields","slug","rel"],"sourceRoot":""}