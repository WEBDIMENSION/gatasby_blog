{"version":3,"file":"component---src-pages-blog-topics-tsx-c7eaf1a1aee5e18e4a2c.js","mappings":"iKAqBA,IAjBkB,SAAC,GAAoE,IAAlEA,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,YAC1B,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACC,EAAD,CAAYC,UAAU,aAEdH,EACKC,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,UAAUH,EAAzB,KAEA,GAGXC,EAAAA,cAAAA,KAAAA,KAAKF,IAEPE,EAAAA,cAACG,EAAAA,EAAD,CAAeC,QAAS,kBAb9B,EAkBA,IAAMH,EAAaI,EAAAA,QAAAA,IAAAA,WAAH,iEAAGA,CAAH,0F,+CCfhB,IAJoB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SACrB,OAAON,EAAAA,cAACO,EAAD,KAAiBD,EAD1B,EAMA,IAAMC,EAAiBF,EAAAA,QAAAA,QAAAA,WAAH,sEAAGA,CAAH,0G,iKC0CpB,EAvCmB,WAAO,IAAD,IACjBG,GAAOC,EAAAA,EAAAA,gBAAc,cAiBrBC,EAAU,UAAGF,EAAKG,yBAAR,aAAGC,EAAwBF,MAC3CA,SAAAA,EAAOG,MAAK,SAACC,EAAQC,GAAT,OAAoBA,EAAEC,WAAaF,EAAEE,UAAjD,IAEA,IAAMC,EAAW,UAAGT,EAAKG,yBAAR,aAAGO,EAAwBR,MAAMS,OAElD,OACEnB,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACoB,EAAD,KACGV,EAAMW,MAAM,EAAGJ,GAAaK,KAAI,SAACC,GAAD,OAC/BvB,EAAAA,cAACwB,EAAD,CAAWC,IAAKF,EAAMG,YACpB1B,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAC2B,EAAAA,KAAD,CAAMC,GAAE,gBAAkBC,IAAUN,EAAMG,YAAlC,KAAmDH,EAAMG,YADnE,MAEWH,EAAMP,WAFjB,QAFH,KA1BT,EAwCMI,EAAYf,EAAAA,QAAAA,GAAAA,WAAH,iEAAGA,CAAH,wJAQTmB,EAAYnB,EAAAA,QAAAA,GAAAA,WAAH,iEAAGA,CAAH,wSCtCf,EAdiE,WAC/D,OACEL,EAAAA,cAAC8B,EAAAA,EAAD,KACE9B,EAAAA,cAAC+B,EAAAA,EAAD,CAAKjC,MAAM,UAAUkC,iBAAiB,EAAOC,YAAa,YAC1DjC,EAAAA,cAACkC,EAAAA,EAAD,KACElC,EAAAA,cAACmC,EAAAA,EAAD,CAAWrC,MAAO,SAAUC,YAAY,KACxCC,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAACoC,EAAD,QAPV,C","sources":["webpack://gatsby-starter-blog/./src/components/pageTitle.tsx","webpack://gatsby-starter-blog/./src/components/postArticle.tsx","webpack://gatsby-starter-blog/./src/components/topicsList.tsx","webpack://gatsby-starter-blog/./src/pages/blog/topics.tsx"],"sourcesContent":["import * as React from \"react\"\nimport styled from \"styled-components\"\nimport GoogleAdsense from \"./google/googleAdsense\"\n\nconst PageTitle = ({ title, prefixTitle }: { title: string; prefixTitle: string }) => {\n  return (\n    <>\n      <DivWrapper className=\"pageTitle\">\n        {(() => {\n          if (prefixTitle) {\n            return <div className=\"prefix\">{prefixTitle}:</div>\n          } else {\n            return \"\"\n          }\n        })()}\n        <h1>{title}</h1>\n      </DivWrapper>\n      <GoogleAdsense slotKey={\"contentsLower\"} />\n    </>\n  )\n}\nexport default PageTitle\nconst DivWrapper = styled.div`\n  margin-bottom: 0;\n  display: flex;\n\n  .prefix {\n    font-size: var(--fontSizeH1);\n    margin-right: 0.5em;\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst PostArticle = ({ children }: { children?: React.ReactNode }) => {\n  return <ArticleWrapper>{children}</ArticleWrapper>\n}\n\nexport default PostArticle\n\nconst ArticleWrapper = styled.article`\n  section {\n    background-color: var(--bgColorScondary);\n    border-radius: 0.5em;\n    padding: 3px;\n    margin-bottom: 1.5em;\n  }\n`\n","/**\n * Tags component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport kebabCase from \"lodash/kebabCase\"\nimport styled from \"styled-components\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nconst TopicsList = () => {\n  const data = useStaticQuery<GatsbyTypes.TopicsListQuery>(graphql`\n    query TopicsList {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { draft: { in: [false] } } }, limit: 2000) {\n        group(field: frontmatter___topics) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `)\n\n  // const title: string = data.site.siteMetadata?.title\n  const group: any = data.allMarkdownRemark?.group\n  group?.sort((a: any, b: any) => b.totalCount - a.totalCount)\n\n  const topicsCount = data.allMarkdownRemark?.group.length\n\n  return (\n    <div>\n      <UlWrapper>\n        {group.slice(0, topicsCount).map((topic: any) => (\n          <LiWrapper key={topic.fieldValue}>\n            <div>\n              <Link to={`/blog/topics/${kebabCase(topic.fieldValue)}/`}>{topic.fieldValue}</Link>\n              &nbsp;(全{topic.totalCount}ページ)\n            </div>\n          </LiWrapper>\n        ))}\n      </UlWrapper>\n    </div>\n  )\n}\n\nexport default TopicsList\nconst UlWrapper = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  -webkit-justify-content: space-around;\n  justify-content: space-around;\n  border: 1px var(--borderColor) solid;\n`\nconst LiWrapper = styled.li`\n  div {\n    margin-right: 1em;\n  }\n\n  a {\n    //color: var(--black);\n    font-weight: bold;\n    display: inline-block;\n    border-radius: 10px;\n    padding: 0.1em 0.5em;\n    margin-bottom: 0.5em;\n    background-color: var(--hrefBackground);\n  }\n\n  a:visited {\n    //color: var(--visited);\n    background-color: var(--hrefVisitedBackground);\n  }\n\n  a:hover {\n    //color: var(--white);\n    color: var(--colorPrimary);\n    background-color: var(--visitedColor);\n  }\n`\n","import React from \"react\"\nimport { PageProps, graphql } from \"gatsby\"\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\nimport Article from \"../../components/postArticle\"\nimport PageTitle from \"../../components/pageTitle\"\nimport TopicsList from \"../../components/topicsList\"\n\nconst Topics: React.FC<PageProps<GatsbyTypes.TopicsPageQuery>> = () => {\n  return (\n    <Layout>\n      <Seo title=\"Topic一覧\" DisplaySubTitle={false} description={\"Topic一覧\"} />\n      <Article>\n        <PageTitle title={\"Topics\"} prefixTitle=\"\" />\n        <section>\n          <TopicsList />\n        </section>\n      </Article>\n    </Layout>\n  )\n}\n\nexport default Topics\n\nexport const pageQuery = graphql`\n  query TopicsPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["title","prefixTitle","React","DivWrapper","className","GoogleAdsense","slotKey","styled","children","ArticleWrapper","data","useStaticQuery","group","allMarkdownRemark","_data$allMarkdownRema","sort","a","b","totalCount","topicsCount","_data$allMarkdownRema2","length","UlWrapper","slice","map","topic","LiWrapper","key","fieldValue","Link","to","kebabCase","Layout","Seo","DisplaySubTitle","description","Article","PageTitle","TopicsList"],"sourceRoot":""}