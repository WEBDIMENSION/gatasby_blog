{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/BackEnd/php/phpunit/","result":{"data":{"site":{"siteMetadata":{"title":"おっさんWEBエンジニア奮闘記"}},"markdownRemark":{"id":"54b5b85a-eaac-51ff-9fe6-797807ae9e12","excerpt":"setup/teardown testのmethodが実行されるたびに前処理・後処理 setUPBeforeClass/tearDownAfterClass test クラス全体に対しての前処理・後処理 PHPUnit でよく使う Assertion Document MethodA Meann…","html":"<h2>setup/teardown</h2>\n<p>testのmethodが実行されるたびに前処理・後処理</p>\n<h2>setUPBeforeClass/tearDownAfterClass</h2>\n<p>test クラス全体に対しての前処理・後処理</p>\n<h2>PHPUnit でよく使う Assertion</h2>\n<p><a href=\"https://phpunit.de/manual/5.5/ja/appendixes.assertions.html\">Document</a></p>\n<table>\n<thead>\n<tr>\n<th>MethodA</th>\n<th>Meann</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>assertEquals($exp, $act)</td>\n<td>$expと$actが等しい(==)</td>\n</tr>\n<tr>\n<td>assertSame($exp, $act)</td>\n<td>$expと$actが等しい(===)</td>\n</tr>\n<tr>\n<td>assertNotEquals($exp, $act)</td>\n<td>$expと$actが等しくない</td>\n</tr>\n<tr>\n<td>assertContains(mixed $needle, Iterator array $haystack)</td>\n<td>配列に $needleが含まれている</td>\n</tr>\n<tr>\n<td>assertArrayHasKey(mixed $key, array $array)</td>\n<td>配列にキーが含まれている</td>\n</tr>\n<tr>\n<td>assertTrue($cond)</td>\n<td>$condがTRUE</td>\n</tr>\n<tr>\n<td>assertFalse($cond)</td>\n<td>$condがFALSE</td>\n</tr>\n<tr>\n<td>assertNull($var)</td>\n<td>$varがNULL</td>\n</tr>\n<tr>\n<td>assertNotNull($var)</td>\n<td>$varがNULLではない</td>\n</tr>\n<tr>\n<td>assertInternalType($type, $act)</td>\n<td>$actの型が$typeと一致する</td>\n</tr>\n<tr>\n<td>assertInstanceOf($expected, $actual)</td>\n<td>$actualが$expectedのインスタンスである</td>\n</tr>\n</tbody>\n</table>\n<h2>PHPUnit でよく使う Annotation</h2>\n<h3>@test</h3>\n<div class=\"gatsby-highlight\" data-language=\"phpregexp\"><pre class=\"language-phpregexp\"><code class=\"language-phpregexp\">class HogeTest extends TestCase\n{\n\n/** @test */\npublic function hogeMethod()\n{\n...\n}\n\n}</code></pre></div>\n<p><code class=\"language-text\">/** @test */</code> を書くことで <code class=\"language-text\">testHogeTest</code> と書かなくて良い</p>\n<h3>dataProvider</h3>\n<div class=\"gatsby-highlight\" data-language=\"phpregexp\"><pre class=\"language-phpregexp\"><code class=\"language-phpregexp\">class HogeTest extends TestCase\n{\n    /**\n     * @test\n     * @dataProvider provider\n     */\n    public function hoge($dollar, $multiplication, $expect)\n    {\n        ...\n        ...\n    }\n\n    /** @test */\n    public function provider(): array\n    {\n        return [\n            // $dollar, $multiplication, $expect\n            [5, 2, 10],\n            [15, 3, 45],\n        ];\n    }\n}</code></pre></div>\n<p><code class=\"language-text\">@dataProvider provider</code> テストデータ指定</p>\n<h3>@testWit</h3>\n<div class=\"gatsby-highlight\" data-language=\"phpregexp\"><pre class=\"language-phpregexp\"><code class=\"language-phpregexp\">class HogeTest extends TestCase\n{\n    /**\n     * @test\n     * @testWith [5, 2, 10]\n     *           [15, 3, 45]\n     */\n    public function hoge($dollar, $multiplication, $expect)\n    {\n        $dollar = new Dollar($dollar);\n        $this-&gt;assertEquals(new Dollar($expect), $dollar-&gt;times($multiplication));\n    }\n}</code></pre></div>\n<p><code class=\"language-text\">@testWith</code> で PHPoc 内に データを記述</p>\n<h3>@testdox</h3>\n<div class=\"gatsby-highlight\" data-language=\"phpregexp\"><pre class=\"language-phpregexp\"><code class=\"language-phpregexp\">/**\n     * @test\n     * @testdox  説明文 \n     * @testWith [5, 2, 10]\n     *           [15, 3, 45]\n     */</code></pre></div>\n<p><code class=\"language-text\">@testdox</code>に説明文をかける</p>\n<h3>@group</h3>\n<div class=\"gatsby-highlight\" data-language=\"phpregexp\"><pre class=\"language-phpregexp\"><code class=\"language-phpregexp\">/**\n * @group hogehoge\n */\npublic function hoge() {\n    // ...\n}</code></pre></div>\n<p><code class=\"language-text\">@group hogehoge</code> group を指定して 実行できる</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 指定のグループのみ実行</span>\n./vendor/bin/phpunit tests/ --group hogehoge\n<span class=\"token comment\"># 指定のグループ以外実行</span>\n./vendor/bin/phpunit tests/ --exclude-group hogehoge</code></pre></div>\n<h3>@depends</h3>\n<div class=\"gatsby-highlight\" data-language=\"phpregexp\"><pre class=\"language-phpregexp\"><code class=\"language-phpregexp\">class StackTest extends TestCase\n{\n    public function testEmpty()\n    {\n        $stack = [];\n        $this-&gt;assertEmpty($stack);\n\n        return $stack;\n    }\n\n    /**\n     * @depends testEmpty\n     */\n    public function testPush(array $stack)\n    {\n        array_push($stack, &#39;foo&#39;);\n        $this-&gt;assertSame(&#39;foo&#39;, $stack[count($stack)-1]);\n        $this-&gt;assertNotEmpty($stack);\n\n        return $stack;\n    }\n\n    /**\n     * @depends testPush\n     */\n    public function testPop(array $stack)\n    {\n        $this-&gt;assertSame(&#39;foo&#39;, array_pop($stack));\n        $this-&gt;assertEmpty($stack);\n    }\n}</code></pre></div>\n<ol>\n<li>testEmptyの実行</li>\n<li>testEmptyの実行結果を引数に、testPushを実行</li>\n<li>testPushの実行結果を引数に、testPopを実行</li>\n</ol>\n<h3>@expectedException InvalidArgumentException</h3>\n<div class=\"gatsby-highlight\" data-language=\"phpregexp\"><pre class=\"language-phpregexp\"><code class=\"language-phpregexp\">/**\n* @expectedException InvalidArgumentException\n**/</code></pre></div>\n<p>例外を受け取ってもTestOKとする</p>","frontmatter":{"title":"PHPUnit 備忘録","date":"March 21, 2023","post_modified":"March 21, 2023","description":"PHPUnit でよく使う Assertion","tags":["PHP","PHPUnit"],"draft":false}},"previous":{"fields":{"slug":"/Tools/uml/activity/"},"frontmatter":{"title":"UML (アクティビティ図)"}},"next":null},"pageContext":{"id":"54b5b85a-eaac-51ff-9fe6-797807ae9e12","previousPostId":"be69d85d-70bd-5604-b4b8-5bc9394dc79c","nextPostId":null,"draft":false}},"staticQueryHashes":["1126706167","1176493165","1188992244","1314910092","1760060771","2772418575","3679674316"]}