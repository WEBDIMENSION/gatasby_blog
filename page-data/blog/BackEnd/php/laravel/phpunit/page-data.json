{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/BackEnd/php/laravel/phpunit/",
    "result": {"data":{"site":{"siteMetadata":{"title":"おっさんWEBエンジニア奮闘記"}},"markdownRemark":{"id":"d4b9ad74-ea2a-5a51-8640-8f0b3ac0ad6a","excerpt":"PHP UnitTest - Laravel での開発の前準備 4 phpunit を実行してみる Laravel にはデフォルトで Test が導入されている。\n実行してみる このように OK がでれば　テスト成功 composer.json の script に追加 で実行できるようになる。 IDE…","html":"<h1>PHP UnitTest - Laravel での開発の前準備 4</h1>\n<h2>phpunit を実行してみる</h2>\n<p>Laravel にはデフォルトで Test が導入されている。\n実行してみる</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"> ./vendor/bin/phpunit</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Time: <span class=\"token number\">669</span> ms, Memory: <span class=\"token number\">22.00</span> MB\n\nOK <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> tests, <span class=\"token number\">1</span> assertions<span class=\"token punctuation\">)</span></code></pre></div>\n<p>このように OK がでれば　テスト成功</p>\n<h3>composer.json の script に追加</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    <span class=\"token string\">\"scripts\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">..</span>.\n        <span class=\"token punctuation\">..</span>.\n        <span class=\"token punctuation\">..</span>.\n        <span class=\"token punctuation\">..</span>.\n        <span class=\"token string\">\"test\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"./vendor/bin/phpunit\"</span>\n        <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">..</span>.\n        <span class=\"token punctuation\">..</span>.\n        <span class=\"token punctuation\">..</span>.</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">composer</span> <span class=\"token builtin class-name\">test</span></code></pre></div>\n<p>で実行できるようになる。</p>\n<h3>IDE から Testunit 実行</h3>\n<p>参考:<a href=\"https://blog.webdimension.jp/linux/docke-on-vagrant/\">Docker on Vagrant をがんばってみた</a></p>\n<p>この例では Vagrant 上の Docker で動いている PHP をテストしています。</p>","frontmatter":{"title":"PHP UnitTest - Laravelでの開発の前準備4","date":"February 15, 2020","post_modified":"February 15, 2020","description":"Laravelデフォルトのphpunitを実行。composer.json へスクリプト登録","tags":["PHPUnit","Laravel"],"draft":false}},"previous":{"fields":{"slug":"/BackEnd/php/laravel/es-lint/"},"frontmatter":{"title":"Eslint (vue) - Laravelでの開発の前準備3"}},"next":{"fields":{"slug":"/BackEnd/php/laravel/vue-test/"},"frontmatter":{"title":"vue.js テスト環境 - Laravelでの開発の前準備5"}}},"pageContext":{"id":"d4b9ad74-ea2a-5a51-8640-8f0b3ac0ad6a","previousPostId":"f000173e-c3b3-5e5a-8009-74e9e67538da","nextPostId":"c9ece3f3-3e5a-5326-bae6-e77019d6e863","draft":false}},
    "staticQueryHashes": ["1126706167","1176493165","1188992244","1314910092","2772418575"]}