{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/Infrastructure/Iac/terraform/syntax/",
    "result": {"data":{"site":{"siteMetadata":{"title":"おっさんWEBエンジニア奮闘記"}},"markdownRemark":{"id":"c4354bba-b758-5a53-ba30-001e33faef72","excerpt":"三項演算子 Count 三項演算子とCountの組み合わせ terraform console 組み込み関数例 cidrsubnet(“10.1.0.0/16”, 8, 3) max(1, 100, 10) substr(“Pragmatic Terraform on AWS”, 10, 9) flatten…","html":"<h2>三項演算子</h2>\n<div class=\"gatsby-highlight\" data-language=\"tf\"><pre class=\"language-tf\"><code class=\"language-tf\">instance_type = var.env == &quot;prod&quot; ? &quot;m5.large&quot; : &quot;t3.micro&quot;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">terraform plan -var <span class=\"token string\">'env=stage'</span></code></pre></div>\n<h2>Count</h2>\n<div class=\"gatsby-highlight\" data-language=\"tf\"><pre class=\"language-tf\"><code class=\"language-tf\"># 3回 resource &quot;aws_vpc&quot; が事項される\nresource &quot;aws_vpc&quot; &quot;examples&quot; {\n  count      = 3\n  cidr_block = &quot;10.${count.index}.0.0/16&quot;\n}</code></pre></div>\n<h2>三項演算子とCountの組み合わせ</h2>\n<div class=\"gatsby-highlight\" data-language=\"tf\"><pre class=\"language-tf\"><code class=\"language-tf\">variable &quot;allow_ssh&quot; {\n  type = bool\n}\n\nresource &quot;aws_security_group&quot; &quot;example&quot; {\n  name = &quot;example&quot;\n}\n\nresource &quot;aws_security_group_rule&quot; &quot;egress&quot; {\n  type              = &quot;egress&quot;\n  from_port         = 0\n  to_port           = 0\n  protocol          = &quot;-1&quot;\n  cidr_blocks       = [&quot;0.0.0.0/0&quot;]\n  security_group_id = aws_security_group.example.id\n}\n\nresource &quot;aws_security_group_rule&quot; &quot;ingress&quot; {\n  count = var.allow_ssh ? 1 : 0\n\n  type              = &quot;ingress&quot;\n  from_port         = 22\n  to_port           = 22\n  protocol          = &quot;tcp&quot;\n  cidr_blocks       = [&quot;0.0.0.0/0&quot;]\n  security_group_id = aws_security_group.example.id\n}\n\noutput &quot;allow_ssh_rule_id&quot; {\n  value = join(&quot;&quot;, aws_security_group_rule.ingress[*].id)\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"tf\"><pre class=\"language-tf\"><code class=\"language-tf\">module &quot;allow_ssh&quot; {\n  source    = &quot;./security_group&quot;\n  allow_ssh = true\n}\n\noutput &quot;allow_ssh_rule_id&quot; {\n  value = module.allow_ssh.allow_ssh_rule_id\n}\n</code></pre></div>\n<h2>terraform console</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 対話式</span>\n<span class=\"token function\">docker-compose</span> <span class=\"token builtin class-name\">exec</span> terraform terraform console</code></pre></div>\n<p>組み込み関数例</p>\n<ul>\n<li>cidrsubnet(“10.1.0.0/16”, 8, 3)</li>\n<li>max(1, 100, 10)</li>\n<li>substr(“Pragmatic Terraform on AWS”, 10, 9)</li>\n<li>flatten([[“Pragmatic”], [“Terraform”, [“on”, “AWS”]]])</li>\n<li>templatefile(”${path.module}/install.sh”, { package = “httpd” })</li>\n</ul>\n<p><a href=\"https://www.terraform.io/language/functions\">公式ドキュメント</a></p>\n<h2>パスワード生成</h2>\n<div class=\"gatsby-highlight\" data-language=\"tf\"><pre class=\"language-tf\"><code class=\"language-tf\">provider &quot;random&quot; {}\n\nresource &quot;random_string&quot; &quot;password&quot; {\n  length  = 32\n  special = false\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"tf\"><pre class=\"language-tf\"><code class=\"language-tf\">resource &quot;aws_db_instance&quot; &quot;example&quot; {\n  engine              = &quot;mysql&quot;\n  instance_class      = &quot;db.t3.small&quot;\n  allocated_storage   = 20\n  skip_final_snapshot = true\n  username            = &quot;admin&quot;\n  password            = random_string.password.result\n}</code></pre></div>\n<h2>Dynamic blocks</h2>\n<p>modules/sg.tf</p>\n<div class=\"gatsby-highlight\" data-language=\"tf\"><pre class=\"language-tf\"><code class=\"language-tf\">variable &quot;ingress_rules&quot; {\n  type = map(\n    object(\n      {\n        port        = number\n        cidr_blocks = list(string)\n      }\n    )\n  )\n}\n\nresource &quot;aws_security_group&quot; default {\n  name = &quot;sg&quot;\n\n  dynamic &quot;ingress&quot; {\n    for_each = var.ingress_rules\n    content {\n      from_port   = ingress.value.port\n      to_port     = ingress.value.port\n      cidr_blocks = ingress.value.cidr_blocks\n      description = &quot;Allow ${ingress.key}&quot;\n      protocol    = &quot;tcp&quot;\n    }\n  }\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"tf\"><pre class=\"language-tf\"><code class=\"language-tf\">module &quot;sg&quot; {\n  source = &quot;./modules/sg.tf&quot;\n\n  ingress_rules = {\n    http = {\n      port        = 80\n      cidr_blocks = [&quot;10.0.0.0/8&quot;, &quot;172.16.0.0/12&quot;]\n    }\n    https = {\n      port        = 443\n      cidr_blocks = [&quot;0.0.0.0/0&quot;]\n    }\n    redirect_http_to_https = {\n      port        = 8080\n      cidr_blocks = [&quot;0.0.0.0/0&quot;]\n    }\n  }\n}</code></pre></div>","frontmatter":{"title":"Terraform 構文","date":"July 02, 2022","post_modified":"July 02, 2022","description":"Terraformで使える演算子","tags":["Terraform","Iac"],"draft":false}},"previous":{"fields":{"slug":"/Tools/ShellScript/bats/"},"frontmatter":{"title":"シェルスクリプトをテストする"}},"next":{"fields":{"slug":"/Tools/multipass/nfs/"},"frontmatter":{"title":"multipass nfs"}}},"pageContext":{"id":"c4354bba-b758-5a53-ba30-001e33faef72","previousPostId":"ef0d2b76-1bc5-5904-a36a-3c91c137d539","nextPostId":"1fed774f-3bab-54c5-95ae-e685fffe7289","draft":false}},
    "staticQueryHashes": ["1126706167","1176493165","1188992244","1314910092","1760060771","2772418575","3679674316"]}