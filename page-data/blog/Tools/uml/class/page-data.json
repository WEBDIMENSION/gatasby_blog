{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/Tools/uml/class/","result":{"data":{"site":{"siteMetadata":{"title":"おっさんWEBエンジニア奮闘記"}},"markdownRemark":{"id":"84998945-a228-5947-8a91-4ead3e2d092f","excerpt":"UML (クラス図) ちょっとの間離れるとすぐ忘れてしまうので備忘録として。。。 基本的な書き方だけ。 参考 【UML】クラス図とは | クラス図の書き方と記号  PlantUMLでクラス図を作成 PlantUML クラス図 早見表 感謝！ 書き方 線形 関連 記号 説明 関連 関連（association…","html":"<h2>UML (クラス図)</h2>\n<p>ちょっとの間離れるとすぐ忘れてしまうので備忘録として。。。</p>\n<p>基本的な書き方だけ。</p>\n<p>参考</p>\n<p><a href=\"https://medium-company.com/%E3%82%AF%E3%83%A9%E3%82%B9%E5%9B%B3/\">【UML】クラス図とは | クラス図の書き方と記号</a></p>\n<p><a href=\"https://www.wakuwakubank.com/posts/565-design-uml-class/\"> PlantUMLでクラス図を作成</a></p>\n<p><a href=\"https://qiita.com/kyonc5/items/4d536cb59fd7c41debc1\">PlantUML クラス図 早見表</a></p>\n<p>感謝！</p>\n<h2>書き方</h2>\n<table>\n<thead>\n<tr>\n<th>線形</th>\n<th>関連</th>\n<th>記号</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>関連</td>\n<td>関連（association）</td>\n<td>—</td>\n<td>クラス間の関連を表現</td>\n</tr>\n<tr>\n<td>集約</td>\n<td>集約（aggregation）</td>\n<td>o—</td>\n<td>クラス間の関連で全体と一部という関係性を表現</td>\n</tr>\n<tr>\n<td>コンポジション</td>\n<td>コンポジション（composition）</td>\n<td>*—</td>\n<td>集約よりも強い集約</td>\n</tr>\n<tr>\n<td>依存</td>\n<td>依存（dependency）</td>\n<td>&#x3C;..</td>\n<td>クラス間の依存関係を表現</td>\n</tr>\n<tr>\n<td>汎化</td>\n<td>汎化（generalization）</td>\n<td>&#x3C;|—</td>\n<td>クラス間の継承を表現</td>\n</tr>\n<tr>\n<td>実現</td>\n<td>実現（realization）</td>\n<td>&#x3C;..|</td>\n<td>クラス間のインターフェースを表現</td>\n</tr>\n</tbody>\n</table>\n<p><code class=\"language-text\">-</code> , <code class=\"language-text\">.</code>  横</p>\n<p><code class=\"language-text\">--</code> , <code class=\"language-text\">..</code>  縦</p>\n<p><code class=\"language-text\">---</code> , <code class=\"language-text\">...</code>  縦 (遠距離)</p>\n<hr>\n<h2>多重度</h2>\n<table>\n<thead>\n<tr>\n<th>多重度</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>必ず1</td>\n</tr>\n<tr>\n<td>0..1</td>\n<td>０ または 1</td>\n</tr>\n<tr>\n<td>0..＊</td>\n<td>0 以上</td>\n</tr>\n<tr>\n<td>1..＊</td>\n<td>1 以上</td>\n</tr>\n<tr>\n<td>n..m</td>\n<td>n以上ｍ以下 ※[例] 1..3 → 1以上3以下</td>\n</tr>\n<tr>\n<td>n</td>\n<td>必ずn ※[例] 2 → 必ず2</td>\n</tr>\n<tr>\n<td>n,m</td>\n<td>nまたはm。[例] 1,3　→　1または3</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>可視性</h2>\n<table>\n<thead>\n<tr>\n<th>記号</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>private</td>\n</tr>\n<tr>\n<td>#</td>\n<td>protected</td>\n</tr>\n<tr>\n<td>~</td>\n<td>package private</td>\n</tr>\n<tr>\n<td>+</td>\n<td>public</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>Example</h2>\n<h3>関連（association）</h3>\n<p>基本的なつながり（関連）をあらわします。</p>\n<p>以下の例では「社員クラス」と「ユーザクラス」は関連性があり、クラス間の多重度は1対1であることを表現しています</p>\n<div class=\"gatsby-highlight\" data-language=\"puml\"><pre class=\"language-puml\"><code class=\"language-puml\">@startuml\nemployee &quot;1&quot; - &quot;1&quot; user : ラベル\nclass employee {\n    - user_id: Integer\n    - user_name: String\n    + get_employee(): Object\n}\nclass user {\n    - name: String\n    - address: String\n    + get_user(): Object\n}\n@enduml</code></pre></div>\n<h3>集約（aggregation）</h3>\n<p>「部分クラス」は「全体クラス」の一部であることをあらわします。ただしお互いに依存関係はない。</p>\n<p>以下の例では「乗員クラス」は「バスクラス」の一部であること（お互い依存関係はない）、クラス間の多重度は1対0以上であることを表現しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"puml\"><pre class=\"language-puml\"><code class=\"language-puml\">@startuml\nbus &quot;1&quot; o- &quot;0..n&quot; tire : ラベル\nclass bus {\n    - company: string\n    - number_of_passengers: Integer\n}\nclass tire {\n    - model: String\n    - start_data: Date\n}\n@enduml</code></pre></div>\n<h3>コンポジション（composition）</h3>\n<p>「部分クラス」は「全体クラス」の一部であることをあらわします。集約よりも結びつきが強くお互いが存在して成り立つ関係性。</p>\n<p>例えば「全体クラス」が削除されると「部分クラス」もあわせて削除されるような関係性をあらわします。</p>\n<p>以下の例では「タイヤクラス」は「バスクラス」の一部であり、「バスが廃車になれば、バスについていたタイヤも廃車になる」といった関係性を表現します。（クラス間の多重度は1対4）</p>\n<div class=\"gatsby-highlight\" data-language=\"puml\"><pre class=\"language-puml\"><code class=\"language-puml\">@startuml\nbus &quot;1&quot; *- &quot;4&quot; tire : ラベル\nclass bus {\n    - company: string\n    - number_of_passengers: Integer\n    + get_bus_info()\n}\n\nclass tire {\n    - model: String\n    - start_data: Date\n    + get_bus_info()\n}\n@enduml</code></pre></div>\n<h3>依存（dependency）</h3>\n<p>お互いが依存関係にあることを表現します。例えば「クラスA」が変更された時、依存関係にある「クラスB」にも変更が生じるといった関係性をあらわします。</p>\n<p>以下の例では、「ホイールクラス」と「タイヤクラス」が依存関係となり、「ホイール」を変えると「タイヤ」も変えるといった関係性を表現しています。（クラス間の多重度は1対4）</p>\n<div class=\"gatsby-highlight\" data-language=\"puml\"><pre class=\"language-puml\"><code class=\"language-puml\">@startuml\nhide empty members\n\nClass GasStation {\n}\n\nclass Car {\n}\n\nGasStation &lt;.. Car : ラベル\n@enduml</code></pre></div>\n<h3>汎化（generalization）</h3>\n<p>子クラス」は「親クラス」の性質の継承しているといった関係性をあらわします。</p>\n<p>以下の例では「犬クラス」は「動物クラス」の性質を継承していることを表現しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"puml\"><pre class=\"language-puml\"><code class=\"language-puml\">@startuml\nbus &lt;|- tire : ラベル\nclass bus {\n    - company: string\n    - number_of_passengers: Integer\n    + get_bus_info()\n}\n\nclass tire {\n    - model: String\n    - start_data: Date\n    + get_bus_info()\n}\n@enduml</code></pre></div>\n<h3>実現（realization）</h3>\n<p>「抽象クラス（interface）」の振る舞いを具体的に実装した「クラス」であるといった関係性をあらわします。</p>\n<p>以下の例では、抽象的なクラスである「動物クラス」の振る舞いを具体的に実装したものが「犬クラス」であるということを表現しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"puml\"><pre class=\"language-puml\"><code class=\"language-puml\">@startuml\nbus &lt;.. tire\nclass bus {\n    - company: string\n    - number_of_passengers: Integer\n    + get_bus_info()\n}\n\nclass tire {\n    - model: String\n    - start_data: Date\n    + get_bus_info()\n}\nnote right of tire\n  注釈\nend note\n@enduml</code></pre></div>\n<h3>Package</h3>\n<div class=\"gatsby-highlight\" data-language=\"puml\"><pre class=\"language-puml\"><code class=\"language-puml\">@startuml\ntitle パッケージ化\n\npackage PackageA {\nclass ClassA {\n}\n\nclass ClassB {\n}\n}\n\npackage PackageB {\nclass ClassC {\n}\n\npackage PackageC {\nclass ClassD {\n}\n\n    class ClassE {\n    }\n}\n}\n@enduml</code></pre></div>\n<h3>Namespaces</h3>\n<div class=\"gatsby-highlight\" data-language=\"puml\"><pre class=\"language-puml\"><code class=\"language-puml\">@startuml\ntitle 名前空間\n\nnamespace PackageA {\n  class Abc {\n  }\n\n  class Xyz {\n  }\n}\n\nnamespace PackageB {\n  class Abc {\n  }\n\n  namespace PackageC {\n    class Xyz {\n    }\n  }\n}\n\nPackageA.Abc ..&gt; PackageA.Xyz\nPackageB.Abc ..&gt; PackageB.PackageC.Xyz\n@enduml</code></pre></div>","frontmatter":{"title":"UML (クラス図)","date":"March 09, 2023","post_modified":"March 09, 2023","description":"Markdown で PlantUML、クラス図","tags":["UML","Markdown"],"draft":false}},"previous":{"fields":{"slug":"/Tools/Commands/gz_text/"},"frontmatter":{"title":"gzip形式(拡張子「.gz」を解凍せずに確認"}},"next":null},"pageContext":{"id":"84998945-a228-5947-8a91-4ead3e2d092f","previousPostId":"448a9500-098f-5699-a308-1c3587b1ef71","nextPostId":null,"draft":false}},"staticQueryHashes":["1126706167","1176493165","1188992244","1314910092","1760060771","2772418575","3679674316"]}