{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/Tools/vim/vim_basic/",
    "result": {"data":{"site":{"siteMetadata":{"title":"おっさんWEBエンジニア奮闘記"}},"markdownRemark":{"id":"7c1a0f2c-e727-5c9c-8211-76a5305b3e19","excerpt":"Normal mode * search word n next search word . repeart vitu vs guit (replace Uppercase to lowercase) dip p is Paragraph dis s is sentence m{a-zA-A} as mark…","html":"<h2>Normal mode</h2>\n<ul>\n<li>* search word</li>\n<li>n next search word</li>\n<li>. repeart</li>\n</ul>\n<ul>\n<li>vitu vs guit (replace Uppercase to lowercase)</li>\n</ul>\n<ul>\n<li>\n<p>dip p is Paragraph</p>\n</li>\n<li>\n<p>dis s is sentence</p>\n</li>\n<li>\n<p>m{a-zA-A} as mark lowcase is this file Uppecase is global</p>\n</li>\n<li>\n<p>`{a-zA-A} as mark lowcase is this file Uppecase is global</p>\n</li>\n<li>\n<p>:jumps</p>\n</li>\n<li>\n<p><ctl>o previous</p>\n</li>\n<li>\n<p><ctl>i next</p>\n</li>\n<li>\n<p>:changes</p>\n</li>\n<li>\n<p>g; previous chane list</p>\n</li>\n<li>\n<p>g, next change list</p>\n</li>\n<li>\n<p>`. latest change point</p>\n</li>\n<li>\n<p>^. latest insert point</p>\n</li>\n<li>\n<p>gf jump file</p>\n</li>\n<li>\n<p><ctl>[ previous</p>\n</li>\n<li>\n<p><ctl>] next</p>\n</li>\n<li>\n<p>_d{motion} black hall rgister</p>\n</li>\n<li>\n<p>ad{motion} ap{motion} ap use “a” register</p>\n</li>\n<li>\n<p>“+p paste clip board</p>\n</li>\n<li>\n<p>“%p current file name</p>\n</li>\n<li>\n<p>”%# altanative file name</p>\n</li>\n<li>\n<p>“.p latest insert text</p>\n</li>\n<li>\n<p>“:p latest exec command</p>\n</li>\n<li>\n<p>”/ latest search word</p>\n</li>\n<li>\n<p>q{register} Start macro</p>\n</li>\n<li>\n<p>q end macro</p>\n</li>\n<li>\n<p>visual mode + “normal @a ” paralel exec</p>\n</li>\n<li>\n<p>:argsdo normal @a paralel exec</p>\n</li>\n<li>\n<p>/a.k.a.<CR> b{ackwoar}d a.k.a</p>\n</li>\n<li>\n<p>/a.k.a.<CR> a.k.a</p>\n</li>\n<li>\n<p>/\\Va.k.a.<CR> a.k.a</p>\n</li>\n<li>\n<p>/\\V(%(And|D)rew) (Neil) register 1 = andrew or drew , register 2 = Neil</p>\n</li>\n<li>\n<p>:%s//\\2, \\1/g</p>\n</li>\n<li>\n<p>:%s/before/after first mach</p>\n</li>\n<li>\n<p>:%s/before/after/g in line</p>\n</li>\n<li>\n<p>:%%s/before/after/g global</p>\n</li>\n<li>\n<p>:%%s/before/after/gc global and prompt</p>\n</li>\n<li>\n<p><ctl>/ latest serch word</p>\n</li>\n<li>\n<p>:%%s/<ctl>r//after/gc global and prompt</p>\n</li>\n<li>\n<p>/\\V(<man>|<dog>)</p>\n</li>\n<li>\n<p>:%%s//={“dog”:“man”,“man”:“dog”}[sub-match(1)]/g</p>\n</li>\n<li>\n<p>:grep word * make quick list</p>\n</li>\n<li>\n<p>:cnext / :cprev jump to source</p>\n</li>\n<li>\n<p>:vim /<ctl>r// ** vimgrep</p>\n</li>\n</ul>\n<h2>Global command</h2>\n<p>// Delete html tag</p>\n<ul>\n<li>/\\v&#x3C;/?\\w+></li>\n<li>:g//d</li>\n</ul>\n<p>// delete donsn’t contain href</p>\n<ul>\n<li>\n<p>:v/href/d</p>\n</li>\n<li>\n<p>:g/word display lines contain word</p>\n</li>\n<li>\n<p>:g/word/yank A lines contain word regist register A(uppercase is append, lowercase is over write)</p>\n</li>\n<li>\n<p>:g/word/t$ Paste buttom line contain word</p>\n</li>\n</ul>\n<h2>Insert mode</h2>\n<ul>\n<li><ctl>r 0 paste register 0</li>\n<li><ctl>r <ctl>-p {registar} past register</li>\n<li><ctl>r = calc</li>\n<li>gv latest selected area</li>\n<li><ctl>h delete left char</li>\n<li><ctl>w delete left word</li>\n<li><ctl>u delete to line first</li>\n<li><ctl>0 onetime normal mode</li>\n<li><ctl>r+ paste clip board</li>\n</ul>\n<h1>Visual mode</h1>\n<ul>\n<li>o toggle cursol in selected area</li>\n<li>gu lowwer case</li>\n<li>gU upper case</li>\n<li>: command for selected area</li>\n<li>S’ Sorround vim</li>\n<li>S” Sorround vim</li>\n<li>S[ Sorround vim</li>\n<li>cs”’ Sorround vim change ’ to ”</li>\n</ul>\n<h2>Command mode</h2>\n<ul>\n<li>\n<p>/pattern<CR> search for forward</p>\n</li>\n<li>\n<p>?pattern<CR> search for backward</p>\n</li>\n<li>\n<p>:s/target/replacer<CR> replace</p>\n</li>\n<li>\n<p>:s/target/replacer/g<CR> replace global</p>\n</li>\n<li>\n<p>:[range]delete [x] to register</p>\n</li>\n<li>\n<p>:[range]yank [x] to register</p>\n</li>\n<li>\n<p>:[range]put [x] to register</p>\n</li>\n<li>\n<p>:[range]copy [address]</p>\n</li>\n<li>\n<p>:[range]t [address] equal copy</p>\n</li>\n<li>\n<p>:[range]move [address]</p>\n</li>\n<li>\n<p>:[range]m[address] equal move</p>\n</li>\n<li>\n<p>:[range]join</p>\n</li>\n<li>\n<p>:[range]normal {command}</p>\n</li>\n<li>\n<p>:[range]substitute/{Pattern}/{string}/[flag] replace word first word</p>\n</li>\n<li>\n<p>:[range]global/{pattern}/[cmd] replace global</p>\n</li>\n<li>\n<p>:1 to head</p>\n</li>\n<li>\n<p>:$ to bottom</p>\n</li>\n<li>\n<p>:3p to line numbe 3 and print</p>\n</li>\n<li>\n<p>:2.5p print between line number 2 to 5</p>\n</li>\n<li>\n<p>:%s//<ctl>r<ctl>w/g Replace</p>\n</li>\n<li>\n<p><ctl>r<ctl>w is select word to comman window</p>\n</li>\n<li>\n<p><ctl>r<ctl>a is select WORD to comman window</p>\n</li>\n<li>\n<p><ctl>r<ctl>0 paste register 0 to command window</p>\n</li>\n<li>\n<p>q: history</p>\n</li>\n<li>\n<p>:2,$!sort -t ’,’ -k2 sort for selected area</p>\n</li>\n<li>\n<p>:e shell</p>\n</li>\n<li>\n<p>:!{cmd}\n:l</p>\n</li>\n<li>\n<p>:[rang]!{filter}</p>\n</li>\n<li>\n<p>:bd buffer delete</p>\n</li>\n<li>\n<p>:%% active path</p>\n</li>\n<li>\n<p>:cd %%</p>\n</li>\n<li>\n<p>:lcd %%</p>\n</li>\n<li>\n<p>:!mkdir -p %%</p>\n</li>\n</ul>\n<h3>Pattern</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/<span class=\"token comment\">#\\([0-9a-fA-F]\\{6}\\|[0-9a-fA-F]\\{3}\\)</span>\n/<span class=\"token comment\">#\\([0-9a-fA-F]\\{6}\\)</span>\n↓\n/<span class=\"token punctuation\">\\</span>v<span class=\"token comment\">#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})</span>\n/<span class=\"token punctuation\">\\</span>v<span class=\"token comment\">#([0-9a-fA-F]{6})</span>\n↓\n/<span class=\"token punctuation\">\\</span>v<span class=\"token comment\">#(\\x{6}|\\x{3})</span></code></pre></div>\n<h4>重複</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/<span class=\"token punctuation\">\\</span>v<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>w+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>_s+<span class=\"token punctuation\">\\</span><span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>\n* <span class=\"token punctuation\">\\</span>_s は空白文字 改行文字</code></pre></div>\n<h4>境界</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/<span class=\"token punctuation\">\\</span>vthe\n↓\n/<span class=\"token punctuation\">\\</span>v<span class=\"token operator\">&lt;</span>the<span class=\"token operator\">></span></code></pre></div>\n<h4>入れ替え</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/<span class=\"token punctuation\">\\</span>v<span class=\"token punctuation\">(</span>%<span class=\"token punctuation\">(</span>And<span class=\"token operator\">|</span>D<span class=\"token punctuation\">)</span>rew<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Neil<span class=\"token punctuation\">)</span>\n%s//<span class=\"token punctuation\">\\</span><span class=\"token number\">2</span>, <span class=\"token punctuation\">\\</span><span class=\"token number\">1</span>/g</code></pre></div>\n<h4>強調表示の絞り込み</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">* <span class=\"token string\">\"\"</span>の中を強調表示\n/<span class=\"token punctuation\">\\</span>v<span class=\"token string\">\"\\zs[^\"</span><span class=\"token punctuation\">]</span>+<span class=\"token punctuation\">\\</span>ze\"</code></pre></div>\n<h4>カーソル上の単語をコマンドラインへ</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>C-r<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>C-w<span class=\"token operator\">></span></code></pre></div>\n<h3>Match Count</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">:%s///gn</code></pre></div>\n<h4>単語の末尾へ</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/word/e</code></pre></div>\n<h3>単語の末尾へ変更</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">//e</code></pre></div>\n<h4>シングルコーテーション内選択</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/<span class=\"token punctuation\">\\</span>v<span class=\"token string\">'([^'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">|</span><span class=\"token string\">'\\w)+'</span>\n/<span class=\"token punctuation\">\\</span>v<span class=\"token string\">'(([^'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">|</span><span class=\"token string\">'\\w)+)'</span></code></pre></div>\n<h4>ダブルコーテーションへ変更</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">:%s//<span class=\"token string\">\"<span class=\"token entity\" title=\"\\1\">\\1</span>\"</span>/g</code></pre></div>\n<h4>統合</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">:%s/<span class=\"token punctuation\">\\</span>v<span class=\"token string\">'(([^'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">|</span><span class=\"token string\">'\\w)+)'</span>/<span class=\"token string\">\"<span class=\"token entity\" title=\"\\1\">\\1</span>\"</span>/g</code></pre></div>\n<h4>確認</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">:%s/<span class=\"token punctuation\">\\</span>v<span class=\"token string\">'(([^'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">|</span><span class=\"token string\">'\\w)+)'</span>/<span class=\"token string\">\"<span class=\"token entity\" title=\"\\1\">\\1</span>\"</span>/gc</code></pre></div>\n<h4>h2, h3, h4 -> h1, h2, h3</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/<span class=\"token punctuation\">\\</span>v<span class=\"token punctuation\">\\</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">\\</span>/?h<span class=\"token punctuation\">\\</span>zs<span class=\"token punctuation\">\\</span>d\n:%s//<span class=\"token punctuation\">\\</span><span class=\"token operator\">=</span>submatch<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>-1/g</code></pre></div>\n<h3>複数ワード入れ替え</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/<span class=\"token punctuation\">\\</span>v<span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>man<span class=\"token operator\">>|</span><span class=\"token operator\">&lt;</span>dog<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n%s//<span class=\"token punctuation\">\\</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"dog\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"man\"</span>,<span class=\"token string\">\"man\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"dog\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span>submatch<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>/g</code></pre></div>\n<h5>Plugin abolish</h5>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">:%S/<span class=\"token punctuation\">{</span>man,dog<span class=\"token punctuation\">}</span>/<span class=\"token punctuation\">{</span>dog,man<span class=\"token punctuation\">}</span>/g</code></pre></div>\n<h4>Buffer 全部に実行</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">*Pragmatic Vim <span class=\"token operator\">&lt;</span>- 対象\n*Pragmatic bookshelf  <span class=\"token operator\">&lt;</span>- 非対称\n\n/Pragmatic<span class=\"token punctuation\">\\</span>ze Vim\n:vimgrep /<span class=\"token operator\">&lt;</span>C-r<span class=\"token operator\">></span>// **/*.txt\n:argsdo %s//Practical/ge</code></pre></div>\n<h4>Quickfix に実行</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">:cdo</code></pre></div>\n<h4>ファイルなの{}内のソート</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">:g/<span class=\"token punctuation\">{</span>/ .+1,/<span class=\"token punctuation\">}</span>/-1 <span class=\"token function\">sort</span></code></pre></div>\n<hr>\n<h3>Nerdtree</h3>\n<ul>\n<li>” File node mappings~</li>\n<li>” double-click,</li>\n<li>” o: open in prev window</li>\n<li>” go: preview</li>\n<li>” t: open in new tab</li>\n<li>” T: open in new tab silently</li>\n<li>” middle-click,</li>\n<li>” i: open split</li>\n<li>” gi: preview split</li>\n<li>” s: open vsplit</li>\n<li>” gs: preview vsplit</li>\n<li>” <CR>: custom open</li>\n<li>”</li>\n<li>” ----------------------------</li>\n<li>” Directory node mappings~</li>\n<li>” double-click,</li>\n<li>” o: open &#x26; close node</li>\n<li>” O: recursively open node</li>\n<li>” t: open in new tab</li>\n<li>” T: open in new tab silently</li>\n<li>” <CR>: custom open</li>\n<li>” x: close parent of node</li>\n<li>” X: close all child nodes of</li>\n<li>” current node recursively</li>\n<li>” middle-click,</li>\n<li>” e: explore selected dir</li>\n<li>”</li>\n<li>” ----------------------------</li>\n<li>” Bookmark table mappings~</li>\n<li>” double-click,</li>\n<li>” o: open bookmark</li>\n<li>” go: preview file</li>\n<li>” go: find dir in tree</li>\n<li>” t: open in new tab</li>\n<li>” T: open in new tab silently</li>\n<li>” i: open split</li>\n<li>” gi: preview split</li>\n<li>” s: open vsplit</li>\n<li>” gs: preview vsplit</li>\n<li>” <CR>: custom open</li>\n<li>” D: delete bookmark</li>\n<li>”</li>\n<li>” ----------------------------</li>\n<li>” Tree navigation mappings~</li>\n<li>” P: go to root</li>\n<li>” p: go to parent</li>\n<li>” K: go to first child</li>\n<li>” J: go to last child</li>\n<li>” <C-j>: go to next sibling</li>\n<li>” <C-k>: go to prev sibling</li>\n<li>”</li>\n<li>” ----------------------------</li>\n<li>” Filesystem mappings~</li>\n<li>” C: change tree root to the</li>\n<li>” selected dir</li>\n<li>” u: move tree root up a dir</li>\n<li>” U: move tree root up a dir</li>\n<li>” but leave old root open</li>\n<li>” r: refresh cursor dir</li>\n<li>” R: refresh current root</li>\n<li>” m: Show menu</li>\n<li>” cd:change the CWD to the</li>\n<li>” selected dir</li>\n<li>” CD:change tree root to CWD</li>\n<li>”</li>\n<li>” ----------------------------</li>\n<li>” Tree filtering mappings~</li>\n<li>” I: hidden files (off)</li>\n<li>” f: file filters (on)</li>\n<li>” F: files (on)</li>\n<li>” B: bookmarks (on)</li>\n<li>”</li>\n<li>” ----------------------------</li>\n<li>” Custom mappings~</li>\n<li>”</li>\n<li>” ----------------------------</li>\n<li>” Other mappings~</li>\n<li>” q: Close the NERDTree window</li>\n<li>” A: Zoom (maximize-minimize)</li>\n<li>” the NERDTree window</li>\n<li>” ?: toggle help</li>\n<li>”</li>\n<li>” ----------------------------</li>\n<li>” Bookmark commands~</li>\n<li>” :Bookmark [<name>]</li>\n<li>” :BookmarkToRoot <name></li>\n<li>” :RevealBookmark <name></li>\n<li>” :OpenBookmark <name></li>\n<li>” :ClearBookmarks [<names>]</li>\n<li>” :ClearAllBookmarks</li>\n<li>” :ReadBookmarks</li>\n<li>” :WriteBookmarks</li>\n<li>” :EditBookmarks</li>\n</ul>","frontmatter":{"title":"Vim コマンド","date":"February 23, 2022","post_modified":"February 23, 2022","description":"Vim コマンド カンニング用","tags":["Vim"],"draft":false}},"previous":{"fields":{"slug":"/Tools/vim/surround_im/"},"frontmatter":{"title":"surround vim"}},"next":{"fields":{"slug":"/Tools/ShellScript/ShellScript_basic/"},"frontmatter":{"title":"ShellScript よく使うパターン"}}},"pageContext":{"id":"7c1a0f2c-e727-5c9c-8211-76a5305b3e19","previousPostId":"1687f021-99c9-509d-a105-56636bbaca5b","nextPostId":"6b00f73d-2bfc-55e8-9be1-8ea424e8a8e8","draft":false}},
    "staticQueryHashes": ["1126706167","1176493165","1188992244","1314910092","2772418575"]}