{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/Tools/ShellScript/ShellScript_basic/",
    "result": {"data":{"site":{"siteMetadata":{"title":"おっさんWEBエンジニア奮闘記"}},"markdownRemark":{"id":"5d101bf4-f6d5-58b7-9cde-b051b8947d3a","excerpt":"Get parameter Loop Replace between start and end Function 引数の数チェック Specify enxtensin and loop Exec file path OS 判定 color 表示㝮整形 指定間隔㝧実行 実行絝果を変数へ保存 Progress…","html":"<h2>Get parameter</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">read</span> -p <span class=\"token string\">$'<span class=\"token entity\" title=\"\\e\">\\e</span>[93mInstall(i) or Uninstall(u): '</span> action\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$action</span> <span class=\"token operator\">=</span> <span class=\"token string\">'i'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n<span class=\"token punctuation\">..</span>.\neactionlse\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'Your iput is missig'</span>\n\t<span class=\"token builtin class-name\">read</span> -p <span class=\"token string\">$'<span class=\"token entity\" title=\"\\e\">\\e</span>[93mInstall(i) or Uninstall(u): '</span> action\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h2>Loop</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">files</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>.bashrc .zshrc .bash_profile<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">file</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">${files<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n\t  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -e <span class=\"token environment constant\">$HOME</span>/<span class=\"token variable\">$file</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">f</span> <span class=\"token keyword\">in</span> *.alias<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n\t\t\t\t<span class=\"token punctuation\">..</span>.\n\t\t  <span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token function\">ls</span> *<span class=\"token punctuation\">)</span>\n\t\t  <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">${END}</span> <span class=\"token operator\">>></span> <span class=\"token environment constant\">$HOME</span>/<span class=\"token variable\">$file</span>\n\t  <span class=\"token keyword\">fi</span>\n\t<span class=\"token keyword\">done</span></code></pre></div>\n<h2>Replace between start and end</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">files</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>.zshrc<span class=\"token punctuation\">)</span>\n<span class=\"token assign-left variable\">START</span><span class=\"token operator\">=</span><span class=\"token string\">\"# import aliases start\"</span>\n<span class=\"token assign-left variable\">END</span><span class=\"token operator\">=</span><span class=\"token string\">\"# import aliases end\"</span>\n\t <span class=\"token function\">sed</span> -i -e <span class=\"token string\">\"/^<span class=\"token variable\">${START}</span>/,/^<span class=\"token variable\">${END}</span>/d\"</span> <span class=\"token environment constant\">$HOME</span>/<span class=\"token variable\">$file</span></code></pre></div>\n<h2>Function</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">START</span><span class=\"token operator\">=</span><span class=\"token string\">\"# import aliases start\"</span>\n<span class=\"token assign-left variable\">END</span><span class=\"token operator\">=</span><span class=\"token string\">\"# import aliases end\"</span>\n<span class=\"token function-name function\">func_remove_text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">sed</span> -i -e <span class=\"token string\">\"/^<span class=\"token variable\">${START}</span>/,/^<span class=\"token variable\">${END}</span>/d\"</span> <span class=\"token variable\">$1</span>\n<span class=\"token punctuation\">}</span>\n\tfunc_remove_text <span class=\"token environment constant\">$HOME</span>/<span class=\"token variable\">$file</span></code></pre></div>\n<h3>引数の数チェック</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Please specify param\"</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ls: dump list\"</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"rm: remove dumpfiles\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h2>Specify enxtensin and loop</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">\t<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">f</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">find</span> $DIR -maxdepth <span class=\"token number\">1</span> -type f -name <span class=\"token string\">\"*.alias\"</span><span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  \t\t<span class=\"token comment\">#echo \"source $DIR/\"${f%.*}\"\" >> $HOME/$file</span>\n\t\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$f</span>\n  \t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source <span class=\"token variable\">$f</span>\"</span> <span class=\"token operator\">>></span> <span class=\"token environment constant\">$HOME</span>/<span class=\"token variable\">$file</span>\n  <span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token function\">ls</span> *<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Exec file path</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#Drive\u001b$B!J%\"!&lt;%+%$%V!K\u001b(B/This path</span>\n<span class=\"token assign-left variable\">DIR</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">$(</span>dirname $0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span></code></pre></div>\n<h2>OS 判定</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">'Darwin'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n<span class=\"token assign-left variable\">CONTAINER_PATH</span><span class=\"token operator\">=~</span>/Library/Containers/com.docker.docker/Data/vms/0/data/Docker.raw\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> substr <span class=\"token punctuation\">$(</span>uname -s<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token number\">5</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">'Linux'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n<span class=\"token assign-left variable\">CONTAINER_PATH</span><span class=\"token operator\">=</span>/var/lib/docker\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> substr <span class=\"token punctuation\">$(</span>uname -s<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token number\">10</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">'MINGW32_NT'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n<span class=\"token assign-left variable\">CONTAINER_PATH</span><span class=\"token operator\">=</span>\n<span class=\"token keyword\">else</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Your platform (<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> -a<span class=\"token variable\">)</span></span>) is not supported.\"</span>\n<span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h2>color</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">$'<span class=\"token entity\" title=\"\\e\">\\e</span>[96m'</span></code></pre></div>\n<h2>表示㝮整形</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">ps</span> --format <span class=\"token string\">'table {{.Image}} {{.Names}} {{.Status}}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">column</span> -t</code></pre></div>\n<h2>指定間隔㝧実行</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">do</span>\n  func_docker_disk_used<span class=\"token punctuation\">;</span><span class=\"token function\">sleep</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<h2>実行絝果を変数へ保存</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function-name function\">func_docker_disk_used</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n somue\n<span class=\"token punctuation\">}</span>\n<span class=\"token assign-left variable\">result</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ls</span> -klsh $CONTAINER_PATH<span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">used_total</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">echo</span> $result <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ print $1 }'</span><span class=\"token variable\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Progress</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function-name function\">prog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin class-name\">local</span> <span class=\"token assign-left variable\">w</span><span class=\"token operator\">=</span><span class=\"token number\">80</span> <span class=\"token assign-left variable\">p</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>  <span class=\"token builtin class-name\">shift</span>\n    <span class=\"token function\">clear</span>\n    <span class=\"token comment\"># create a string of spaces, then change them to dots</span>\n    <span class=\"token builtin class-name\">printf</span> -v dots <span class=\"token string\">\"%*s\"</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$((</span> $p<span class=\"token operator\">*</span>$w<span class=\"token operator\">/</span><span class=\"token number\">100</span> <span class=\"token variable\">))</span></span>\"</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">dots</span><span class=\"token operator\">=</span><span class=\"token variable\">${dots<span class=\"token operator\">/</span><span class=\"token operator\">/</span> <span class=\"token operator\">/</span>.}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\"># print those dots on a fixed-width space plus the percentage etc.</span>\n    <span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\r\">\\r</span><span class=\"token entity\" title=\"\\e\">\\e</span>[K|%-*s| %3d %% %s\"</span> <span class=\"token string\">\"<span class=\"token variable\">$w</span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">$dots</span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">$p</span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">$*</span>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># test loop</span>\n\n<span class=\"token function-name function\">func_after_exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">x</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">100</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n      prog <span class=\"token string\">\"<span class=\"token variable\">$x</span>\"</span>  working<span class=\"token punctuation\">..</span>.\n      <span class=\"token function\">sleep</span> <span class=\"token number\">0.04</span>   <span class=\"token comment\"># do some work here</span>\n  <span class=\"token keyword\">done</span> <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span>\n  <span class=\"token function\">clear</span>\n  globalIp\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>変換</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># \" を削除</span>\n<span class=\"token assign-left variable\">ip</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $result <span class=\"token operator\">|</span> jq <span class=\"token string\">'.ip'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/\"//g'</span><span class=\"token variable\">)</span></span></code></pre></div>\n<h2>Exists チェック</h2>\n<h3>Dir</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -d <span class=\"token variable\">$SOME_PATH</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\n  <span class=\"token keyword\">fi</span></code></pre></div>\n<h3>File</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -f <span class=\"token variable\">$SOME_PATH</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\n  <span class=\"token keyword\">fi</span></code></pre></div>\n<h2>Path</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 現在のPATHを絶対PATHへ</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">$(</span>dirname $0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>\n<span class=\"token comment\"># 現在のPATHを絶対PATHへ から移動</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">$(</span>dirname $0<span class=\"token punctuation\">)</span>/<span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span></code></pre></div>\n<h2>env ファイル読み込み</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> ./.env</code></pre></div>\n<h2>ディレクトリ内のファイルをループ</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">file</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"<span class=\"token variable\">$HTML_DIR</span>\"</span>/*.html<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span></code></pre></div>\n<h2>ファイル名から拡張子を除去</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">filename</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> <span class=\"token string\">\"<span class=\"token variable\">$file</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -f <span class=\"token number\">1</span> -d <span class=\"token string\">'.'</span><span class=\"token variable\">)</span></span></code></pre></div>","frontmatter":{"title":"ShellScript よく使うパターン","date":"February 23, 2022","post_modified":"February 23, 2022","description":"ShellScript ソースコピペ用","tags":["Shell Script"],"draft":false}},"previous":{"fields":{"slug":"/Tools/vim/vim_basic/"},"frontmatter":{"title":"Vim コマンド"}},"next":{"fields":{"slug":"/FrontEnd/REACT/react_typescript_install/"},"frontmatter":{"title":"React.js typescript"}}},"pageContext":{"id":"5d101bf4-f6d5-58b7-9cde-b051b8947d3a","previousPostId":"ee25530f-85c8-5019-87e7-915b44708836","nextPostId":"fc5d57b8-a8e7-5309-9101-343411a4d593","draft":false}},
    "staticQueryHashes": ["1126706167","1176493165","1188992244","1314910092","2772418575"]}