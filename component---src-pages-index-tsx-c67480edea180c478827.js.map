{"version":3,"file":"component---src-pages-index-tsx-c67480edea180c478827.js","mappings":"mIAEIA,EAAyB,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBF,EAAuB,EAAQ,OAEhDG,EAAc,EAAQ,MAEtBC,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,6PACD,cAEJN,EAAQ,EAAUG,G,wDCVlB,IAJoB,SAAC,GAAqC,IAAnCI,EAAmC,EAAnCA,SACrB,OAAO,gBAACC,EAAD,KAAiBD,IAK1B,IAAMC,EAAiBC,EAAAA,GAAAA,QAAH,qK,6EC0EpB,IA5CiB,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,MAClB,OACE,gBAACC,EAAD,KACGD,EAAME,KAAI,SAACC,GAAc,gBAClBC,GAAQD,MAAAA,GAAA,UAAAA,EAAME,mBAAN,eAAmBD,SAAnB,UAA4BD,EAAKG,cAAjC,aAA4B,EAAaC,MAEvD,OACE,sBAAIC,IAAG,UAAEL,EAAKG,cAAP,aAAE,EAAaC,KAAME,UAAW,YACrC,2BAASA,UAAU,kBACjB,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAI,mBAAUR,EAAKG,cAAf,aAAU,EAAaC,OAAQ,EAAIK,SAAS,OACpD,wBAAMA,SAAS,YAAYR,KAG/B,qBAAGK,UAAU,iBACX,sCAAON,EAAKE,mBAAZ,aAAO,EAAkBQ,gBAE3B,qBACEC,wBAAyB,CACvBC,QAAQ,UAAAZ,EAAKE,mBAAL,eAAkBW,eAAeb,MAAAA,OAAjC,EAAiCA,EAAMc,UAAW,IAE5DL,SAAS,gBAEX,gBAAC,IAAD,CAAeT,KAAMA,WAuBnC,IAAMF,EAAYF,EAAAA,GAAAA,GAAH,0b,yGC7Df,IAjBsB,SAAC,GAA4B,QAA1BI,EAA0B,EAA1BA,KACvB,OACE,gBAACe,EAAD,CAAWT,UAAW,QAAtB,UACGN,EAAKE,mBADR,iBACG,EAAkBc,YADrB,aACG,EAAwBjB,KAAI,SAACkB,GAC5B,OACE,sBAAIZ,IAAKY,GACP,gBAAC,IAAD,KACE,gBAAC,IAAD,OAEF,gBAAC,EAAAV,KAAD,CAAMC,GAAE,cAAgBU,GAAAA,CAAUD,GAA1B,KAAoCA,SAUxD,IAAMF,EAAYnB,EAAAA,GAAAA,GAAH,iL,6HCmDf,UAhDmE,SAAC,GAAa,IACzEC,EADyE,EAAXsB,KACjDC,kBAAkBvB,MAErC,OAAqB,IAAjBA,EAAMwB,OAEN,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKpB,MAAM,wBACX,uLAQF,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKA,MAAM,UAAUqB,iBAAiB,EAAOT,YAAa,yCAC1D,gBAACU,EAAD,CAAYjB,UAAW,WACrB,gBAAC,IAAD,CAAgBkB,WAAW,IAC3B,+DAEE,2BAFF,8BAKA,gBAAC,IAAD,CAAeC,QAAS,mBAc1B,gBAAC,IAAD,KACE,gBAACC,EAAD,oBACA,+BACE,gBAAC,IAAD,CAAU7B,MAAOA,QAS7B,IAAM0B,EAAa3B,EAAAA,GAAAA,IAAH,qNAaV8B,EAAY9B,EAAAA,GAAAA,GAAH","sources":["webpack://gatsby-starter-blog/./node_modules/@mui/icons-material/LocalOffer.js","webpack://gatsby-starter-blog/./src/components/postArticle.tsx","webpack://gatsby-starter-blog/./src/components/postList.tsx","webpack://gatsby-starter-blog/./src/components/tagsInContent.tsx","webpack://gatsby-starter-blog/./src/pages/index.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m21.41 11.58-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\"\n}), 'LocalOffer');\n\nexports.default = _default;","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst PostArticle = ({ children }: { children?: any }) => {\n  return <ArticleWrapper>{children}</ArticleWrapper>\n}\n\nexport default PostArticle\n\nconst ArticleWrapper = styled.article`\n  section {\n    background-color: var(--bgColorScondary);\n    border-radius: 0.5em;\n    padding: 0.4em;\n    margin-bottom: 1.5em;\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport IconButton from \"@mui/material/IconButton\"\nimport LocalOfferIcon from \"@mui/icons-material/LocalOffer\"\nimport kebabCase from \"lodash/kebabCase\"\nimport TagsInContent from \"./tagsInContent\"\n\n// interface INode {\n//   excerpt?: string | null | undefined\n//   fields?: { slug?: string | null | undefined } | null | undefined\n//   frontmatter?:\n//     | {\n//         date?: any | null | undefined\n//         post_modified?: any | null | undefined\n//         title?: string | null | undefined\n//         description?: string | null | undefined\n//         tags?: Array<{\n//           tag: string\n//         }>\n//       }\n//     | null\n//     | undefined\n// }\n\n// interface INodes {\n//   site?:\n//   | {\n//       siteMetadata?: { title?: string | null | undefined } | null | undefined\n//     }\n//   | null\n//   | undefined\n// allMarkdownRemark: {\n//   nodes: Array<{\n//     node: INode\n//   }>\n// }\n// }\n\nconst PostList = ({ nodes }: { nodes: any }) => {\n  return (\n    <OlWrapper>\n      {nodes.map((node: any) => {\n        const title = node?.frontmatter?.title || node.fields?.slug\n\n        return (\n          <li key={node.fields?.slug} className={\"postList\"}>\n            <article className=\"post-list-item\">\n              <h2>\n                <Link to={\"/blog\" + node.fields?.slug || \"\"} itemProp=\"url\">\n                  <span itemProp=\"headline\">{title}</span>\n                </Link>\n              </h2>\n              <p className=\"post_modified\">\n                <span>{node.frontmatter?.post_modified}</span>\n              </p>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter?.description || node?.excerpt || \"\",\n                }}\n                itemProp=\"description\"\n              />\n              <TagsInContent node={node} />\n              {/*<ul className={\"tags\"}>*/}\n              {/*  {node.frontmatter?.tags?.map((tag: any) => {*/}\n              {/*    return (*/}\n              {/*      <li key={tag}>*/}\n              {/*        <IconButton>*/}\n              {/*          <LocalOfferIcon />*/}\n              {/*        </IconButton>*/}\n              {/*        <Link to={`/blog/tags/${kebabCase(tag)}/`}>{tag}</Link>*/}\n              {/*      </li>*/}\n              {/*    )*/}\n              {/*  })}*/}\n              {/*</ul>*/}\n            </article>\n          </li>\n        )\n      })}\n    </OlWrapper>\n  )\n}\n\nexport default PostList\n\nconst OlWrapper = styled.ol`\n  P.post_modified {\n    text-align: end;\n\n    span {\n      color: var(--colorSecondary);\n    }\n  }\n\n  li.postList {\n    background-color: var(--bgColorScondary);\n    border-radius: 8px;\n    margin-bottom: 2em;\n    padding: 0.5em;\n    box-shadow: inset 0 0 30px -15px rgba(255, 255, 255, 0.4);\n  }\n\n  h2 {\n    background-color: var(--colorPrimary);\n    border-radius: 8px;\n    padding: 0 4px;\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport IconButton from \"@mui/material/IconButton\"\nimport LocalOfferIcon from \"@mui/icons-material/LocalOffer\"\nimport kebabCase from \"lodash/kebabCase\"\n\nconst TagsInContent = ({ node }: { node: any }) => {\n  return (\n    <UlWrapper className={\"tags\"}>\n      {node.frontmatter?.tags?.map((tag: any) => {\n        return (\n          <li key={tag}>\n            <IconButton>\n              <LocalOfferIcon />\n            </IconButton>\n            <Link to={`/blog/tags/${kebabCase(tag)}/`}>{tag}</Link>\n          </li>\n        )\n      })}\n    </UlWrapper>\n  )\n}\n\nexport default TagsInContent\n\nconst UlWrapper = styled.ul`\n  display: flex;\n  justify-content: flex-end;\n\n  li {\n    margin-left: 1em;\n\n    button {\n      color: var(--fontColor) !important;\n    }\n  }\n`\n","import * as React from \"react\"\nimport { PageProps, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostList from \"../components/postList\"\nimport Article from \"../components/postArticle\"\nimport styled from \"styled-components\"\nimport BioDescription from \"../components/bioDescription\"\nimport GoogleAdsense from \"../components/google/googleAdsense\"\n\n// interface INode {\n//   nodes: Array<{\n//     node: {\n//       fieldes: {\n//         slug?: string\n//       }\n//       expect: string\n//       formatter: {\n//         date?: string\n//         post_modified?: string\n//         title?: string\n//         description?: string\n//         tags?: Array<{\n//           tag: string\n//         }>\n//       }\n//     }\n//   }>\n// }\nconst BlogIndex: React.FC<PageProps<GatsbyTypes.BlogIndexQuery>> = ({ data }) => {\n  const nodes = data.allMarkdownRemark.nodes\n\n  if (nodes.length === 0) {\n    return (\n      <Layout>\n        <Seo title=\"No blog posts found\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the directory you specified for the\n          \"gatsby-source-filesystem\" plugin in gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  } else {\n    return (\n      <Layout>\n        <Seo title=\"TopPage\" DisplaySubTitle={false} description={\"TopPage (トップページ)、Latest post (最近の投稿)\"} />\n        <DivWrapper className={\"topText\"}>\n          <BioDescription isSideBar={false} />\n          <p>\n            WEB系バックエンドを主軸にインフラからフロントエンドまでが守備範囲。\n            <br />\n            WEBエンジニアを目指す方への参考になれば幸いです。\n          </p>\n          <GoogleAdsense slotKey={\"contentsLower\"} />\n        </DivWrapper>\n        {/*<div>*/}\n        {/*  <StaticImage*/}\n        {/*    className=\"topImage\"*/}\n        {/*    layout=\"fullWidth\"*/}\n        {/*    formats={[\"auto\", \"png\", \"jpg\", \"avif\"]}*/}\n        {/*    src=\"../images/top.jpg\"*/}\n        {/*    // width={100}*/}\n        {/*    // height={150}*/}\n        {/*    quality={95}*/}\n        {/*    alt=\"\"*/}\n        {/*  />*/}\n        {/*</div>*/}\n        <Article>\n          <H2Wrapper>-- 最近の投稿 --</H2Wrapper>\n          <section>\n            <PostList nodes={nodes} />\n          </section>\n        </Article>\n      </Layout>\n    )\n  }\n}\nexport default BlogIndex\n\nconst DivWrapper = styled.div`\n  margin: 2.2em 0;\n  font-size: 1.2em;\n  line-height: 2em;\n  text-align: center;\n\n  p {\n    margin: 2em 0;\n    line-height: 3em;\n    background-color: var(--bgColorScondary);\n  }\n`\n\nconst H2Wrapper = styled.h2`\n  font-size: var(--fontSizeH1);\n  text-align: center;\n`\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 6, sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          post_modified(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","children","ArticleWrapper","styled","nodes","OlWrapper","map","node","title","frontmatter","fields","slug","key","className","Link","to","itemProp","post_modified","dangerouslySetInnerHTML","__html","description","excerpt","UlWrapper","tags","tag","kebabCase","data","allMarkdownRemark","length","DisplaySubTitle","DivWrapper","isSideBar","slotKey","H2Wrapper"],"sourceRoot":""}