{"version":3,"file":"component---src-pages-blog-categories-tsx-2c19c1cc7ae0c68bcbd1.js","mappings":"iKAqBA,IAjBkB,SAAC,GAAoE,IAAlEA,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,YAC1B,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACC,EAAD,CAAYC,UAAU,aAEdH,EACKC,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,UAAUH,EAAzB,KAEA,GAGXC,EAAAA,cAAAA,KAAAA,KAAKF,IAEPE,EAAAA,cAACG,EAAAA,EAAD,CAAeC,QAAS,oBAK9B,IAAMH,EAAaI,EAAAA,QAAAA,IAAAA,WAAH,iEAAGA,CAAH,4F,6CCfhB,IAJoB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SACrB,OAAON,EAAAA,cAACO,EAAD,KAAiBD,IAK1B,IAAMC,EAAiBF,EAAAA,QAAAA,QAAAA,WAAH,sEAAGA,CAAH,4G,iICmCpB,EAhCmB,WAAO,IAAD,EAiBjBG,EAAK,WAhBEC,EAAAA,EAAAA,gBAAc,cAgBRC,yBAAR,aAAGC,EAAwBH,MAEtC,OACER,EAAAA,cAAAA,KAAAA,KACGQ,EAAMI,KAAI,SAAAC,GAAQ,OACjBb,EAAAA,cAAAA,KAAAA,CAAIc,IAAKD,EAASE,YAChBf,EAAAA,cAACgB,EAAAA,KAAD,CAAMC,GAAE,oBAAsBC,GAAAA,CAAUL,EAASE,YAAzC,KACLF,EAASE,WADZ,KAC0BF,EAASM,WADnC,W,oBCbV,EAd8E,WAC5E,OACEnB,EAAAA,cAACoB,EAAAA,EAAD,KACEpB,EAAAA,cAACqB,EAAAA,EAAD,KACErB,EAAAA,cAACsB,EAAAA,EAAD,CAAKxB,MAAO,uBAAwByB,iBAAiB,EAAMC,YAAa,yBACxExB,EAAAA,cAACyB,EAAAA,EAAD,CAAW3B,MAAO,aAAcC,YAAY,KAC5CC,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAC0B,EAAD","sources":["webpack://gatsby-starter-blog/./src/components/pageTitle.tsx","webpack://gatsby-starter-blog/./src/components/postArticle.tsx","webpack://gatsby-starter-blog/./src/components/categories.tsx","webpack://gatsby-starter-blog/./src/pages/blog/categories.tsx"],"sourcesContent":["import * as React from \"react\"\nimport styled from \"styled-components\"\nimport GoogleAdsense from \"./google/googleAdsense\"\n\nconst PageTitle = ({ title, prefixTitle }: { title: string; prefixTitle: string }) => {\n  return (\n    <>\n      <DivWrapper className=\"pageTitle\">\n        {(() => {\n          if (prefixTitle) {\n            return <div className=\"prefix\">{prefixTitle}:</div>\n          } else {\n            return \"\"\n          }\n        })()}\n        <h1>{title}</h1>\n      </DivWrapper>\n      <GoogleAdsense slotKey={\"contentsLower\"} />\n    </>\n  )\n}\nexport default PageTitle\nconst DivWrapper = styled.div`\n  margin-bottom: 0;\n  display: flex;\n\n  .prefix {\n    font-size: var(--fontSizeH1);\n    margin-right: 0.5em;\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst PostArticle = ({ children }: { children?: React.ReactNode }) => {\n  return <ArticleWrapper>{children}</ArticleWrapper>\n}\n\nexport default PostArticle\n\nconst ArticleWrapper = styled.article`\n  section {\n    background-color: var(--bgColorScondary);\n    border-radius: 0.5em;\n    padding: 3px;\n    margin-bottom: 1.5em;\n  }\n`\n","/**\n * Tags component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport kebabCase from \"lodash/kebabCase\"\n\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nconst Categories = () => {\n  const data = useStaticQuery<GatsbyTypes.categoriesQueryQuery>(graphql`\n    query categoriesQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { draft: { in: [false] } } }, limit: 2000) {\n        group(field: frontmatter___categories) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `)\n\n  const group = data.allMarkdownRemark?.group\n\n  return (\n    <ul>\n      {group.map(category => (\n        <li key={category.fieldValue}>\n          <Link to={`/blog/categories/${kebabCase(category.fieldValue)}/`}>\n            {category.fieldValue} ({category.totalCount})\n          </Link>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default Categories\n","import React from \"react\"\nimport { graphql, PageProps } from \"gatsby\"\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\nimport Categories from \"../../components/categories\"\nimport Article from \"../../components/postArticle\"\nimport PageTitle from \"../../components/pageTitle\"\n\nconst CategoriesPage: React.FC<PageProps<GatsbyTypes.CategoriesQueryQuery>> = () => {\n  return (\n    <Layout>\n      <Article>\n        <Seo title={\"Categories (カテゴリー)一覧\"} DisplaySubTitle={true} description={\"Categories (カテゴリー)一覧\"} />\n        <PageTitle title={\"Categories\"} prefixTitle=\"\" />\n        <section>\n          <Categories />\n        </section>\n      </Article>\n    </Layout>\n  )\n}\n\nexport default CategoriesPage\n\nexport const pageQuery = graphql`\n  query CategoriesQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["title","prefixTitle","React","DivWrapper","className","GoogleAdsense","slotKey","styled","children","ArticleWrapper","group","useStaticQuery","allMarkdownRemark","_data$allMarkdownRema","map","category","key","fieldValue","Link","to","kebabCase","totalCount","Layout","Article","Seo","DisplaySubTitle","description","PageTitle","Categories"],"sourceRoot":""}