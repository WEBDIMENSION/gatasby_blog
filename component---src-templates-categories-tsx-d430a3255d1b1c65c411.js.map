{"version":3,"file":"component---src-templates-categories-tsx-d430a3255d1b1c65c411.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/pageNation.tsx","webpack://gatsby-starter-blog/./src/components/pageTitle.tsx","webpack://gatsby-starter-blog/./src/components/postList.tsx","webpack://gatsby-starter-blog/./src/components/tagsInContent.tsx","webpack://gatsby-starter-blog/./src/templates/categories.tsx"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst PageNation = ({ pageContext }: { pageContext: any }) => {\n  const { numPages } = pageContext\n  const currentPage = pageContext.currentPage\n  const linkPrefix = pageContext.linkPrefix\n  const linkSuffix = pageContext.linkSuffix\n  return (\n    <nav>\n      <UlWrapper>\n        {Array.from({ length: numPages }, (_, i) => (\n          <li key={`pagination-number${i + 1}`} className={`${i + 1}` == currentPage ? \"thisPage\" : \"etherPage\"}>\n            <Link to={`${linkPrefix}${i === 0 ? \"\" : linkSuffix}${i === 0 ? \"\" : i + 1}/`}>{i + 1}</Link>\n          </li>\n        ))}\n      </UlWrapper>\n    </nav>\n  )\n}\nexport default PageNation\nconst UlWrapper = styled.ul`\n  display: flex;\n  justify-content: center;\n\n  li {\n    display: block;\n    width: 3em;\n    text-align: center;\n    margin: 0 0.2em;\n  }\n  li.thisPage {\n    background-color: var(--colorSecondary);\n  }\n  li.etherPage {\n    background-color: var(--colorPrimary);\n  }\n`\n","import * as React from \"react\"\nimport styled from \"styled-components\"\nimport GoogleAdsense from \"./google/googleAdsense\"\n\nconst PageTitle = ({ title, prefixTitle }: { title: string; prefixTitle: string }) => {\n  return (\n    <>\n      <DivWrapper className=\"pageTitle\">\n        {(() => {\n          if (prefixTitle) {\n            return <div className=\"prefix\">{prefixTitle}:</div>\n          } else {\n            return \"\"\n          }\n        })()}\n        <h1>{title}</h1>\n      </DivWrapper>\n      <GoogleAdsense slotKey={\"contentsLower\"} />\n    </>\n  )\n}\nexport default PageTitle\nconst DivWrapper = styled.div`\n  margin-bottom: 0;\n  display: flex;\n\n  .prefix {\n    font-size: var(--fontSizeH1);\n    margin-right: 0.5em;\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport TagsInContent from \"./tagsInContent\"\n\n// interface INode {\n//   excerpt?: string | null | undefined\n//   fields?: { slug?: string | null | undefined } | null | undefined\n//   frontmatter?:\n//     | {\n//         date?: any | null | undefined\n//         post_modified?: any | null | undefined\n//         title?: string | null | undefined\n//         description?: string | null | undefined\n//         tags?: Array<{\n//           tag: string\n//         }>\n//       }\n//     | null\n//     | undefined\n// }\n\n// interface INodes {\n//   site?:\n//   | {\n//       siteMetadata?: { title?: string | null | undefined } | null | undefined\n//     }\n//   | null\n//   | undefined\n// allMarkdownRemark: {\n//   nodes: Array<{\n//     node: INode\n//   }>\n// }\n// }\n\nconst PostList = ({ nodes }: { nodes: any }) => {\n  return (\n    <OlWrapper>\n      {nodes.map((node: any) => {\n        const title = node?.frontmatter?.title || node.fields?.slug\n\n        return (\n          <li key={node.fields?.slug} className={\"postList\"}>\n            <article className=\"post-list-item\">\n              <h2>\n                <Link to={\"/blog\" + node.fields?.slug || \"\"} itemProp=\"url\">\n                  <span itemProp=\"headline\">{title}</span>\n                </Link>\n              </h2>\n              <p className=\"post_modified\">\n                <span>{node.frontmatter?.post_modified}</span>\n              </p>\n              <p\n                className=\"content\"\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter?.description || node?.excerpt || \"\",\n                }}\n                itemProp=\"description\"\n              />\n              <TagsInContent node={node} />\n              {/*<ul className={\"tags\"}>*/}\n              {/*  {node.frontmatter?.tags?.map((tag: any) => {*/}\n              {/*    return (*/}\n              {/*      <li key={tag}>*/}\n              {/*        <IconButton>*/}\n              {/*          <LocalOfferIcon />*/}\n              {/*        </IconButton>*/}\n              {/*        <Link to={`/blog/tags/${kebabCase(tag)}/`}>{tag}</Link>*/}\n              {/*      </li>*/}\n              {/*    )*/}\n              {/*  })}*/}\n              {/*</ul>*/}\n            </article>\n          </li>\n        )\n      })}\n    </OlWrapper>\n  )\n}\n\nexport default PostList\n\nconst OlWrapper = styled.ol`\n  P.post_modified {\n    text-align: end;\n\n    span {\n      color: var(--colorSecondary);\n    }\n  }\n\n  li.postList {\n    background-color: var(--bgColorScondary);\n    border-radius: 8px;\n    margin-bottom: 1.5em;\n    padding: 3px;\n    box-shadow: inset 0 0 30px -15px rgba(255, 255, 255, 0.4);\n  }\n\n  h2 {\n    background-color: var(--colorPrimary);\n    border-radius: 8px;\n    padding: 0 4px;\n  }\n\n  p.content {\n    padding-left: 6px;\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTag } from \"@fortawesome/free-solid-svg-icons\"\n\nconst TagsInContent = ({ node }: { node: any }) => {\n  return (\n    <UlWrapper className={\"tags\"}>\n      {node.frontmatter?.tags?.map((tag: string) => {\n        return (\n          <li key={tag}>\n            <FontAwesomeIcon icon={faTag} />\n            <Link to={`/blog/tags/${kebabCase(tag)}/`}>{tag}</Link>\n          </li>\n        )\n      })}\n    </UlWrapper>\n  )\n}\n\nexport default TagsInContent\n\nconst UlWrapper = styled.ul`\n  display: flex;\n  justify-content: flex-end;\n\n  li {\n    margin-left: 1em;\n\n    button {\n      color: var(--fontColor) !important;\n    }\n  }\n`\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostList from \"../components/postList\"\nimport PageTitle from \"../components/pageTitle\"\nimport PageNation from \"../components/pageNation\"\n\nconst Categories = ({ pageContext, data }: { pageContext: any; data: any }) => {\n  const { category } = pageContext\n  const nodes = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout>\n      <Seo title={category} />\n      <Seo\n        title={category + \" がカテゴライズされた記事一覧\"}\n        DisplaySubTitle={true}\n        description={category + \" がカテゴライズされた記事一覧\"}\n      />\n\n      <div>\n        <PageTitle title={category} prefixTitle=\"Category\" />\n        <PostList nodes={nodes} />\n        <Link to=\"/categories/\">All categories</Link>\n      </div>\n      <section>\n        <PageNation pageContext={pageContext} />\n      </section>\n    </Layout>\n  )\n}\n\nexport default Categories\n\nexport const pageQuery = graphql`\n  query Categories($category: String, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      skip: $skip\n      limit: $limit\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { in: [$category] }, draft: { in: [false] } } }\n    ) {\n      totalCount\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          post_modified(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          categories\n        }\n      }\n    }\n  }\n`\n"],"names":["pageContext","numPages","currentPage","linkPrefix","linkSuffix","UlWrapper","Array","from","length","_","i","key","className","Link","to","styled","title","prefixTitle","DivWrapper","slotKey","nodes","OlWrapper","map","node","frontmatter","fields","slug","itemProp","post_modified","dangerouslySetInnerHTML","__html","description","excerpt","tags","tag","icon","faTag","kebabCase","data","category","allMarkdownRemark","DisplaySubTitle"],"sourceRoot":""}