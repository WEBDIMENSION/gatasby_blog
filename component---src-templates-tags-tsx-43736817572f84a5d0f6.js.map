{"version":3,"file":"component---src-templates-tags-tsx-43736817572f84a5d0f6.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/pageNation.tsx","webpack://gatsby-starter-blog/./src/components/pageTitle.tsx","webpack://gatsby-starter-blog/./src/components/postList.tsx","webpack://gatsby-starter-blog/./src/components/tagsInContent.tsx","webpack://gatsby-starter-blog/./src/templates/tags.tsx"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst PageNation = ({ pageContext }: { pageContext: any }) => {\n  const { numPages } = pageContext\n  const currentPage = pageContext.currentPage\n  const linkPrefix = pageContext.linkPrefix\n  const linkSuffix = pageContext.linkSuffix\n  return (\n    <nav>\n      <UlWrapper>\n        {Array.from({ length: numPages }, (_, i) => (\n          <li key={`pagination-number${i + 1}`} className={`${i + 1}` == currentPage ? \"thisPage\" : \"etherPage\"}>\n            <Link to={`${linkPrefix}${i === 0 ? \"\" : linkSuffix}${i === 0 ? \"\" : i + 1}/`}>{i + 1}</Link>\n          </li>\n        ))}\n      </UlWrapper>\n    </nav>\n  )\n}\nexport default PageNation\nconst UlWrapper = styled.ul`\n  display: flex;\n  justify-content: center;\n\n  li {\n    display: block;\n    width: 3em;\n    text-align: center;\n    margin: 0 0.2em;\n  }\n  li.thisPage {\n    background-color: var(--colorSecondary);\n  }\n  li.etherPage {\n    background-color: var(--colorPrimary);\n  }\n`\n","import * as React from \"react\"\nimport styled from \"styled-components\"\nimport GoogleAdsense from \"./google/googleAdsense\"\n\nconst PageTitle = ({ title, prefixTitle }: { title: string; prefixTitle: string }) => {\n  return (\n    <>\n      <DivWrapper className=\"pageTitle\">\n        {(() => {\n          if (prefixTitle) {\n            return <div className=\"prefix\">{prefixTitle}:</div>\n          } else {\n            return \"\"\n          }\n        })()}\n        <h1>{title}</h1>\n      </DivWrapper>\n      <GoogleAdsense slotKey={\"contentsLower\"} />\n    </>\n  )\n}\nexport default PageTitle\nconst DivWrapper = styled.div`\n  margin-bottom: 0;\n  display: flex;\n\n  .prefix {\n    font-size: var(--fontSizeH1);\n    margin-right: 0.5em;\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport TagsInContent from \"./tagsInContent\"\n\n// interface INode {\n//   excerpt?: string | null | undefined\n//   fields?: { slug?: string | null | undefined } | null | undefined\n//   frontmatter?:\n//     | {\n//         date?: any | null | undefined\n//         post_modified?: any | null | undefined\n//         title?: string | null | undefined\n//         description?: string | null | undefined\n//         tags?: Array<{\n//           tag: string\n//         }>\n//       }\n//     | null\n//     | undefined\n// }\n\n// interface INodes {\n//   site?:\n//   | {\n//       siteMetadata?: { title?: string | null | undefined } | null | undefined\n//     }\n//   | null\n//   | undefined\n// allMarkdownRemark: {\n//   nodes: Array<{\n//     node: INode\n//   }>\n// }\n// }\n\nconst PostList = ({ nodes }: { nodes: any }) => {\n  return (\n    <OlWrapper>\n      {nodes.map((node: any) => {\n        const title = node?.frontmatter?.title || node.fields?.slug\n\n        return (\n          <li key={node.fields?.slug} className={\"postList\"}>\n            <article className=\"post-list-item\">\n              <h2>\n                <Link to={\"/blog\" + node.fields?.slug || \"\"} itemProp=\"url\">\n                  <span itemProp=\"headline\">{title}</span>\n                </Link>\n              </h2>\n              <p className=\"post_modified\">\n                <span>{node.frontmatter?.post_modified}</span>\n              </p>\n              <p\n                className=\"content\"\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter?.description || node?.excerpt || \"\",\n                }}\n                itemProp=\"description\"\n              />\n              <TagsInContent node={node} />\n              {/*<ul className={\"tags\"}>*/}\n              {/*  {node.frontmatter?.tags?.map((tag: any) => {*/}\n              {/*    return (*/}\n              {/*      <li key={tag}>*/}\n              {/*        <IconButton>*/}\n              {/*          <LocalOfferIcon />*/}\n              {/*        </IconButton>*/}\n              {/*        <Link to={`/blog/tags/${kebabCase(tag)}/`}>{tag}</Link>*/}\n              {/*      </li>*/}\n              {/*    )*/}\n              {/*  })}*/}\n              {/*</ul>*/}\n            </article>\n          </li>\n        )\n      })}\n    </OlWrapper>\n  )\n}\n\nexport default PostList\n\nconst OlWrapper = styled.ol`\n  P.post_modified {\n    text-align: end;\n\n    span {\n      color: var(--colorSecondary);\n    }\n  }\n\n  li.postList {\n    background-color: var(--bgColorScondary);\n    border-radius: 8px;\n    margin-bottom: 1.5em;\n    padding: 3px;\n    box-shadow: inset 0 0 30px -15px rgba(255, 255, 255, 0.4);\n  }\n\n  h2 {\n    background-color: var(--colorPrimary);\n    border-radius: 8px;\n    padding: 0 4px;\n  }\n\n  p.content {\n    padding-left: 6px;\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTag } from \"@fortawesome/free-solid-svg-icons\"\n\nconst TagsInContent = ({ node }: { node: any }) => {\n  return (\n    <UlWrapper className={\"tags\"}>\n      {node.frontmatter?.tags?.map((tag: string) => {\n        return (\n          <li key={tag} className={\"tags\"}>\n            <FontAwesomeIcon icon={faTag} size=\"1x\" />\n            <Link to={`/blog/tags/${kebabCase(tag)}/`}>{tag}</Link>\n          </li>\n        )\n      })}\n    </UlWrapper>\n  )\n}\n\nexport default TagsInContent\n\nconst UlWrapper = styled.ul`\n  display: flex;\n  justify-content: flex-end;\n\n  li {\n    margin-left: 1em;\n\n    button {\n      color: var(--fontColor) !important;\n    }\n  }\n`\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostList from \"../components/postList\"\nimport PageTitle from \"../components/pageTitle\"\nimport PageNation from \"../components/pageNation\"\n\nconst Tags = ({ pageContext, data }: { pageContext: any; data: any }) => {\n  const { tag } = pageContext\n  const nodes = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout>\n      <Seo\n        title={tag + \" がタグ付けされた記事一覧\"}\n        DisplaySubTitle={true}\n        description={tag + \" がタグ付けされた記事一覧\"}\n      />\n\n      <div>\n        <PageTitle title={tag} prefixTitle=\"Tagging\" />\n        <PostList nodes={nodes} />\n        <Link to=\"/blog/tags/\">All tags</Link>\n      </div>\n      <section>\n        <PageNation pageContext={pageContext} />\n      </section>\n    </Layout>\n  )\n}\nexport default Tags\n\nexport const pageQuery = graphql`\n  query Tags($tag: String, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      skip: $skip\n      limit: $limit\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { in: [false] } } }\n    ) {\n      totalCount\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          post_modified(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["pageContext","numPages","currentPage","linkPrefix","linkSuffix","React","UlWrapper","Array","from","length","_","i","key","className","Link","to","styled","title","prefixTitle","DivWrapper","GoogleAdsense","slotKey","nodes","OlWrapper","map","node","frontmatter","fields","_node$fields","slug","_node$fields2","_node$fields3","itemProp","_node$frontmatter2","post_modified","dangerouslySetInnerHTML","__html","description","excerpt","TagsInContent","_node$frontmatter","tags","_node$frontmatter$tag","tag","FontAwesomeIcon","icon","faTag","size","kebabCase","data","allMarkdownRemark","Layout","Seo","DisplaySubTitle","PageTitle","PostList","PageNation"],"sourceRoot":""}